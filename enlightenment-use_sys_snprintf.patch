diff -ur enlightenment-0.16.6.orig/src/E.h enlightenment-0.16.6/src/E.h
--- enlightenment-0.16.6.orig/src/E.h	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/E.h	Wed Nov 12 17:24:40 2003
@@ -249,7 +249,7 @@
 #define Esetenv(var, val, overwrite) \
 { \
   static char envvar[FILEPATH_LEN_MAX]; \
-  Esnprintf(envvar, FILEPATH_LEN_MAX, "%s=%s", var, val);\
+  snprintf(envvar, FILEPATH_LEN_MAX, "%s=%s", var, val);\
   putenv(envvar);\
 }
 
diff -ur enlightenment-0.16.6.orig/src/actions.c enlightenment-0.16.6/src/actions.c
--- enlightenment-0.16.6.orig/src/actions.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/actions.c	Wed Nov 12 17:23:52 2003
@@ -270,7 +270,7 @@
      {
 	char                stuff[255];
 
-	Esnprintf(stuff, sizeof(stuff), _("%u references remain\n"),
+	snprintf(stuff, sizeof(stuff), _("%u references remain\n"),
 		  ActionClassToRemove->ref_count);
 	DIALOG_OK(_("ActionClass Error!"), stuff);
 	EDBUG_RETURN_;
@@ -3268,7 +3268,7 @@
    {
       char                stuff[255];
 
-      Esnprintf(stuff, sizeof(stuff), _("About Enlightenment %s"),
+      snprintf(stuff, sizeof(stuff), _("About Enlightenment %s"),
 		ENLIGHTENMENT_VERSION);
       DialogSetTitle(d, stuff);
    }
@@ -3650,7 +3650,7 @@
 	ibl = ListAllIconboxes(&num);
 	if (ibl)
 	   Efree(ibl);
-	Esnprintf(s, sizeof(s), "_IB_%i", num);
+	snprintf(s, sizeof(s), "_IB_%i", num);
 	AUDIO_PLAY("SOUND_NEW_ICONBOX");
 	ib = CreateIconbox(s);
 	ShowIconbox(ib);
@@ -3885,7 +3885,7 @@
    if (!(CanZoom()))
       EDBUG_RETURN(0);
 
-   Esnprintf(s, sizeof(s), "%s/.zoom_warn", UserEDir());
+   snprintf(s, sizeof(s), "%s/.zoom_warn", UserEDir());
    if (!exists(s))
      {
 	FILE               *f;
diff -ur enlightenment-0.16.6.orig/src/borders.c enlightenment-0.16.6/src/borders.c
--- enlightenment-0.16.6.orig/src/borders.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/borders.c	Wed Nov 12 17:23:52 2003
@@ -1732,7 +1732,7 @@
 	if (b->part[i].iclass->external)
 	  {
 	     ewin->bits[i].win = 0;
-	     Esnprintf(s, sizeof(s), "request imageclass %s",
+	     snprintf(s, sizeof(s), "request imageclass %s",
 		       b->part[i].iclass->name);
 	     CommsBroadcast(s);
 	     await = Emalloc(sizeof(AwaitIclass));
@@ -2238,7 +2238,7 @@
      {
 	char                stuff[255];
 
-	Esnprintf(stuff, sizeof(stuff), _("%u references remain\n"),
+	snprintf(stuff, sizeof(stuff), _("%u references remain\n"),
 		  b->ref_count);
 	DIALOG_OK(_("Border Error!"), stuff);
 	EDBUG_RETURN_;
diff -ur enlightenment-0.16.6.orig/src/buttons.c enlightenment-0.16.6/src/buttons.c
--- enlightenment-0.16.6.orig/src/buttons.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/buttons.c	Wed Nov 12 17:23:52 2003
@@ -122,7 +122,7 @@
      {
 	char                stuff[255];
 
-	Esnprintf(stuff, sizeof(stuff), _("%u references remain\n"),
+	snprintf(stuff, sizeof(stuff), _("%u references remain\n"),
 		  b->ref_count);
 	DIALOG_OK(_("Button Error!"), stuff);
 
diff -ur enlightenment-0.16.6.orig/src/cmclass.c enlightenment-0.16.6/src/cmclass.c
--- enlightenment-0.16.6.orig/src/cmclass.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/cmclass.c	Wed Nov 12 17:23:52 2003
@@ -94,7 +94,7 @@
      {
 	char                stuff[255];
 
-	Esnprintf(stuff, sizeof(stuff), _("%u references remain\n"),
+	snprintf(stuff, sizeof(stuff), _("%u references remain\n"),
 		  cm->ref_count);
 	DIALOG_OK(_("ColorModClass Error!"), stuff);
 
diff -ur enlightenment-0.16.6.orig/src/comms.c enlightenment-0.16.6/src/comms.c
--- enlightenment-0.16.6.orig/src/comms.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/comms.c	Wed Nov 12 17:23:52 2003
@@ -34,7 +34,7 @@
 
    comms_win = XCreateSimpleWindow(disp, root.win, -100, -100, 5, 5, 0, 0, 0);
    XSelectInput(disp, comms_win, StructureNotifyMask | SubstructureNotifyMask);
-   Esnprintf(s, sizeof(s), "WINID %8x", (int)comms_win);
+   snprintf(s, sizeof(s), "WINID %8x", (int)comms_win);
    XA_ENLIGHTENMENT_COMMS = XInternAtom(disp, "ENLIGHTENMENT_COMMS", False);
    XChangeProperty(disp, comms_win, XA_ENLIGHTENMENT_COMMS, XA_STRING, 8,
 		   PropModeReplace, (unsigned char *)s, strlen(s));
@@ -117,7 +117,7 @@
    ev.xclient.format = 8;
    for (i = 0; i < len + 1; i += 12)
      {
-	Esnprintf(ss, sizeof(ss), "%8x", (int)comms_win);
+	snprintf(ss, sizeof(ss), "%8x", (int)comms_win);
 	for (j = 0; j < 12; j++)
 	  {
 	     ss[8 + j] = s[i + j];
@@ -214,7 +214,7 @@
 	cl = MakeClient(win);
 	if (!cl)
 	   EDBUG_RETURN(NULL);
-	Esnprintf(st, sizeof(st), "%8x", (int)win);
+	snprintf(st, sizeof(st), "%8x", (int)win);
 	cl->name = duplicate(st);
 	AddItem((void *)cl, st, cl->win, LIST_TYPE_CLIENT);
 	XSelectInput(disp, win, StructureNotifyMask | SubstructureNotifyMask);
@@ -440,7 +440,7 @@
 	if (exists(buf))
 	  {
 	     SetDefaultTheme(buf);
-	     Esnprintf(sss, sizeof(sss), "restart_theme %s", buf);
+	     snprintf(sss, sizeof(sss), "restart_theme %s", buf);
 	     doExit(sss);
 	  }
      }
@@ -611,7 +611,7 @@
 	       {
 		  if (desks.desk[i].bg == bg)
 		    {
-		       Esnprintf(buf2, sizeof(buf2), "%i\n", i);
+		       snprintf(buf2, sizeof(buf2), "%i\n", i);
 		       strcat(buf, buf2);
 		    }
 	       }
@@ -684,11 +684,11 @@
 				     (Mod5Mask | ControlMask | ShiftMask))
 			       mod = 20;
 			    if (a->action->params)
-			       Esnprintf(buf2, sizeof(buf2), "%s %i %i %s\n",
+			       snprintf(buf2, sizeof(buf2), "%s %i %i %s\n",
 					 key, mod, a->action->Type,
 					 a->action->params);
 			    else
-			       Esnprintf(buf2, sizeof(buf2), "%s %i %i\n", key,
+			       snprintf(buf2, sizeof(buf2), "%s %i %i\n", key,
 					 mod, a->action->Type);
 			    if (buf)
 			      {
@@ -846,9 +846,9 @@
 	sscanf(s, "%*s %1000s", w);
 	bg = (Background *) FindItem(w, 0, LIST_FINDBY_NAME,
 				     LIST_TYPE_BACKGROUND);
-	Esnprintf(buf, sizeof(buf), "(null)");
+	snprintf(buf, sizeof(buf), "(null)");
 	if ((bg) && (bg->cmclass))
-	   Esnprintf(buf, sizeof(buf), "%s", bg->cmclass->name);
+	   snprintf(buf, sizeof(buf), "%s", bg->cmclass->name);
 	CommsSend(c, buf);
      }
    else if (!strcmp(w, "del_colmod"))
@@ -859,7 +859,7 @@
 	sscanf(s, "%*s %1000s", w);
 	cm = (ColorModifierClass *) FindItem(w, 0, LIST_FINDBY_NAME,
 					     LIST_TYPE_COLORMODIFIER);
-	Esnprintf(buf, sizeof(buf), "(null)");
+	snprintf(buf, sizeof(buf), "(null)");
 	if (cm)
 	   FreeCMClass(cm);
      }
@@ -872,33 +872,33 @@
 	sscanf(s, "%*s %1000s", w);
 	cm = (ColorModifierClass *) FindItem(w, 0, LIST_FINDBY_NAME,
 					     LIST_TYPE_COLORMODIFIER);
-	Esnprintf(buf, sizeof(buf), "(null)");
+	snprintf(buf, sizeof(buf), "(null)");
 	if (cm)
 	  {
-	     Esnprintf(buf, sizeof(buf), "%i", (int)(cm->red.num));
+	     snprintf(buf, sizeof(buf), "%i", (int)(cm->red.num));
 	     for (i = 0; i < cm->red.num; i++)
 	       {
-		  Esnprintf(buf2, sizeof(buf2), " %i", (int)(cm->red.px[i]));
+		  snprintf(buf2, sizeof(buf2), " %i", (int)(cm->red.px[i]));
 		  strcat(buf, buf2);
-		  Esnprintf(buf2, sizeof(buf2), " %i", (int)(cm->red.py[i]));
+		  snprintf(buf2, sizeof(buf2), " %i", (int)(cm->red.py[i]));
 		  strcat(buf, buf2);
 	       }
-	     Esnprintf(buf2, sizeof(buf2), "\n%i", (int)(cm->green.num));
+	     snprintf(buf2, sizeof(buf2), "\n%i", (int)(cm->green.num));
 	     strcat(buf, buf2);
 	     for (i = 0; i < cm->green.num; i++)
 	       {
-		  Esnprintf(buf2, sizeof(buf2), " %i", (int)(cm->green.px[i]));
+		  snprintf(buf2, sizeof(buf2), " %i", (int)(cm->green.px[i]));
 		  strcat(buf, buf2);
-		  Esnprintf(buf2, sizeof(buf2), " %i", (int)(cm->green.py[i]));
+		  snprintf(buf2, sizeof(buf2), " %i", (int)(cm->green.py[i]));
 		  strcat(buf, buf2);
 	       }
-	     Esnprintf(buf2, sizeof(buf2), "\n%i", (int)(cm->red.num));
+	     snprintf(buf2, sizeof(buf2), "\n%i", (int)(cm->red.num));
 	     strcat(buf, buf2);
 	     for (i = 0; i < cm->blue.num; i++)
 	       {
-		  Esnprintf(buf2, sizeof(buf2), " %i", (int)(cm->blue.px[i]));
+		  snprintf(buf2, sizeof(buf2), " %i", (int)(cm->blue.px[i]));
 		  strcat(buf, buf2);
-		  Esnprintf(buf2, sizeof(buf2), " %i", (int)(cm->blue.py[i]));
+		  snprintf(buf2, sizeof(buf2), " %i", (int)(cm->blue.py[i]));
 		  strcat(buf, buf2);
 	       }
 	  }
@@ -991,11 +991,11 @@
 	sscanf(s, "%*s %1000s", w);
 	bg = (Background *) FindItem(w, 0, LIST_FINDBY_NAME,
 				     LIST_TYPE_BACKGROUND);
-	Esnprintf(buf, sizeof(buf), "(null)");
+	snprintf(buf, sizeof(buf), "(null)");
 	if (bg)
 	  {
 	     if ((bg->bg.file) && (bg->top.file))
-		Esnprintf(buf, sizeof(buf),
+		snprintf(buf, sizeof(buf),
 			  "%s %i %i %i %s %i %i %i %i %i %i %s %i %i %i %i %i",
 			  bg->name, bg->bg.solid.r, bg->bg.solid.g,
 			  bg->bg.solid.b, bg->bg.file, bg->bg.tile,
@@ -1004,7 +1004,7 @@
 			  bg->top.keep_aspect, bg->top.xjust, bg->top.yjust,
 			  bg->top.xperc, bg->top.yperc);
 	     else if ((!(bg->bg.file)) && (bg->top.file))
-		Esnprintf(buf, sizeof(buf),
+		snprintf(buf, sizeof(buf),
 			  "%s %i %i %i %s %i %i %i %i %i %i %s %i %i %i %i %i",
 			  bg->name, bg->bg.solid.r, bg->bg.solid.g,
 			  bg->bg.solid.b, "(null)", bg->bg.tile,
@@ -1013,7 +1013,7 @@
 			  bg->top.keep_aspect, bg->top.xjust, bg->top.yjust,
 			  bg->top.xperc, bg->top.yperc);
 	     else if ((bg->bg.file) && (!(bg->top.file)))
-		Esnprintf(buf, sizeof(buf),
+		snprintf(buf, sizeof(buf),
 			  "%s %i %i %i %s %i %i %i %i %i %i %s %i %i %i %i %i",
 			  bg->name, bg->bg.solid.r, bg->bg.solid.g,
 			  bg->bg.solid.b, bg->bg.file, bg->bg.tile,
@@ -1022,7 +1022,7 @@
 			  bg->top.keep_aspect, bg->top.xjust, bg->top.yjust,
 			  bg->top.xperc, bg->top.yperc);
 	     else if ((!(bg->bg.file)) && (!(bg->top.file)))
-		Esnprintf(buf, sizeof(buf),
+		snprintf(buf, sizeof(buf),
 			  "%s %i %i %i %s %i %i %i %i %i %i %s %i %i %i %i %i",
 			  bg->name, bg->bg.solid.r, bg->bg.solid.g,
 			  bg->bg.solid.b, "(null)", bg->bg.tile,
@@ -1491,7 +1491,7 @@
 	int                 a, b;
 
 	GetAreaSize(&a, &b);
-	Esnprintf(buf, sizeof(buf),
+	snprintf(buf, sizeof(buf),
 		  "FOCUSMODE: %i\n" "DOCKAPP_SUPPORT: %i\n" "DOCKDIRMODE: %i\n"
 		  "ICONDIRMODE: %i\n" "MOVEMODE: %i\n" "RESIZEMODE: %i\n"
 		  "SLIDEMODE: %i\n" "CLEANUPSLIDE: %i\n" "MAPSLIDE: %i\n"
@@ -1555,7 +1555,7 @@
 	     char                buf[FILEPATH_LEN_MAX];
 
 	     buf[0] = 0;
-	     Esnprintf(buf, sizeof(buf), "Number of desks is %d\n",
+	     snprintf(buf, sizeof(buf), "Number of desks is %d\n",
 		       mode.numdesktops);
 	     CommsSend(c, buf);
 	  }
@@ -1607,7 +1607,7 @@
 		ewin->client.icon_name = none;
 	     if (ewin->border)
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "***CLIENT***\n" "CLIENT_WIN_ID:          %8x\n"
 			    "FRAME_WIN_ID:           %8x\n"
 			    "FRAME_X,Y:              %5i , %5i\n"
@@ -1686,7 +1686,7 @@
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "***CLIENT***\n" "CLIENT_WIN_ID:          %8x\n"
 			    "FRAME_WIN_ID:           %8x\n"
 			    "FRAME_X,Y:              %5i , %5i\n"
@@ -1775,7 +1775,7 @@
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "No matching EWin found\n");
+	     snprintf(buf, sizeof(buf), "No matching EWin found\n");
 	  }
 	if (buf)
 	  {
@@ -1791,22 +1791,22 @@
 	char                buf4[FILEPATH_LEN_MAX];
 	char                buf5[FILEPATH_LEN_MAX];
 
-	Esnprintf(buf, sizeof(buf), "stuff:\n");
+	snprintf(buf, sizeof(buf), "stuff:\n");
 	if (mode.ewin)
 	  {
-	     Esnprintf(buf2, sizeof(buf2), "mode.ewin - %8x\n",
+	     snprintf(buf2, sizeof(buf2), "mode.ewin - %8x\n",
 		       mode.ewin->client.win);
 	     strcat(buf, buf2);
 	  }
 	if (mode.focuswin)
 	  {
-	     Esnprintf(buf3, sizeof(buf3), "mode.focuswin - %8x\n",
+	     snprintf(buf3, sizeof(buf3), "mode.focuswin - %8x\n",
 		       mode.focuswin->client.win);
 	     strcat(buf, buf3);
 	  }
 	if (mode.realfocuswin)
 	  {
-	     Esnprintf(buf4, sizeof(buf4), "mode.realfocuswin - %8x\n",
+	     snprintf(buf4, sizeof(buf4), "mode.realfocuswin - %8x\n",
 		       mode.realfocuswin->client.win);
 	     strcat(buf, buf4);
 	  }
@@ -1816,7 +1816,7 @@
 	  }
 	if (mode.context_ewin)
 	  {
-	     Esnprintf(buf5, sizeof(buf5), "context_ewin - %8x\n",
+	     snprintf(buf5, sizeof(buf5), "context_ewin - %8x\n",
 		       mode.context_ewin->client.win);
 	     strcat(buf, buf5);
 	  }
@@ -1846,7 +1846,7 @@
 		lst[i]->client.icon_name = none;
 	     if (lst[i]->border)
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "***CLIENT***\n" "CLIENT_WIN_ID:          %8x\n"
 			    "FRAME_WIN_ID:           %8x\n"
 			    "FRAME_X,Y:              %5i , %5i\n"
@@ -1928,7 +1928,7 @@
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "***CLIENT***\n" "CLIENT_WIN_ID:          %8x\n"
 			    "FRAME_WIN_ID:           %8x\n"
 			    "FRAME_X,Y:              %5i , %5i\n"
@@ -2049,7 +2049,7 @@
 	{
 	   char                buf[FILEPATH_LEN_MAX];
 
-	   Esnprintf(buf, sizeof(buf),
+	   snprintf(buf, sizeof(buf),
 		     _("Received Unknown Client Message.\n"
 		       "Client Name:    %s\n" "Client Version: %s\n"
 		       "Message Contents:\n\n" "%s\n"), s1, s2, s);
diff -ur enlightenment-0.16.6.orig/src/config.c enlightenment-0.16.6/src/config.c
--- enlightenment-0.16.6.orig/src/config.c	Wed Nov 12 17:18:38 2003
+++ enlightenment-0.16.6/src/config.c	Wed Nov 12 17:23:52 2003
@@ -3261,7 +3261,7 @@
 		s[i] = '.';
 	     i++;
 	  }
-	Esnprintf(execline, sizeof(execline), "%s " "-P " "-nostdinc " "-undef "
+	snprintf(execline, sizeof(execline), "%s " "-P " "-nostdinc " "-undef "
 #ifndef __EMX__
 		  "-include %s/definitions " "-I%s " "-I%s "
 		  "-D ENLIGHTENMENT_VERSION=%s " "-D ENLIGHTENMENT_ROOT=%s "
@@ -3289,7 +3289,7 @@
 		  root.h, root.depth, def_user, def_home, def_shell, path,
 		  UserCacheDir(), s);
 	system(execline);
-	Esnprintf(execline, sizeof(execline), "%s/cached/cfg/%s.preparsed",
+	snprintf(execline, sizeof(execline), "%s/cached/cfg/%s.preparsed",
 		  UserCacheDir(), s);
 #ifndef __EMX__
 	fpin = fopen(execline, "r");
@@ -3523,20 +3523,20 @@
 
    /* look in ~/.enlightenment first */
 
-   Esnprintf(s, sizeof(s), "%s/%s", UserEDir(), file);
+   snprintf(s, sizeof(s), "%s/%s", UserEDir(), file);
    if (findLocalizedFile(s) || isfile(s))
       EDBUG_RETURN(duplicate(s));
 
    /* look in theme dir */
-   Esnprintf(s, sizeof(s), "%s/%s", themepath, file);
+   snprintf(s, sizeof(s), "%s/%s", themepath, file);
    if (findLocalizedFile(s) || isfile(s))
       EDBUG_RETURN(duplicate(s));
 
    /* look in system config dir */
 #ifndef __EMX__
-   Esnprintf(s, sizeof(s), "%s/%s", CONFIGDATADIR, file);
+   snprintf(s, sizeof(s), "%s/%s", CONFIGDATADIR, file);
 #else
-   Esnprintf(s, sizeof(s), "%s/config/%s", __XOS2RedirRoot(ENLIGHTENMENT_ROOT),
+   snprintf(s, sizeof(s), "%s/config/%s", __XOS2RedirRoot(ENLIGHTENMENT_ROOT),
 	     file);
 #endif
    if (findLocalizedFile(s) || isfile(s))
@@ -3573,15 +3573,15 @@
 #endif
 
    /* look in ~/.enlightenment first */
-   Esnprintf(s, sizeof(s), "%s/%s", UserEDir(), file);
+   snprintf(s, sizeof(s), "%s/%s", UserEDir(), file);
    if (findLocalizedFile(s) || isfile(s))
       EDBUG_RETURN(duplicate(s));
 
    /* look in system config dir */
 #ifndef __EMX__
-   Esnprintf(s, sizeof(s), "%s/%s", CONFIGDATADIR, file);
+   snprintf(s, sizeof(s), "%s/%s", CONFIGDATADIR, file);
 #else
-   Esnprintf(s, sizeof(s), "%s/config/%s", __XOS2RedirRoot(ENLIGHTENMENT_ROOT),
+   snprintf(s, sizeof(s), "%s/config/%s", __XOS2RedirRoot(ENLIGHTENMENT_ROOT),
 	     file);
 #endif
    if (findLocalizedFile(s) || isfile(s))
@@ -3602,7 +3602,7 @@
 
    EDBUG(5, "LoadConfigFile");
 
-   Esnprintf(s, sizeof(s), "%s", f);
+   snprintf(s, sizeof(s), "%s", f);
    file = FindFile(s);
    if (!file)
       EDBUG_RETURN(0);
@@ -3621,7 +3621,7 @@
 	i++;
      }
 
-   Esnprintf(s, sizeof(s), "%s/cached/cfg/%s.preparsed", UserCacheDir(), s2);
+   snprintf(s, sizeof(s), "%s/cached/cfg/%s.preparsed", UserCacheDir(), s2);
 
    if (strstr(f, "control.cfg"))
       notheme = 1;
@@ -3664,14 +3664,14 @@
    EDBUG(5, "LoadEConfig");
    mustdel = 0;
 
-   Esnprintf(s, sizeof(s), "%s/", UserEDir());
+   snprintf(s, sizeof(s), "%s/", UserEDir());
 #if USE_FNLIB
    Fnlib_add_dir(pFnlibData, s);
 #endif
 #ifndef __EMX__
-   Esnprintf(s, sizeof(s), "%s/", CONFIGDATADIR);
+   snprintf(s, sizeof(s), "%s/", CONFIGDATADIR);
 #else
-   Esnprintf(s, sizeof(s), "%s/config/", __XOS2RedirRoot(ENLIGHTENMENT_ROOT));
+   snprintf(s, sizeof(s), "%s/config/", __XOS2RedirRoot(ENLIGHTENMENT_ROOT));
 #endif
 #if USE_FNLIB
    Fnlib_add_dir(pFnlibData, s);
@@ -3686,7 +3686,7 @@
 	     fprintf(f, "%s\n", themelocation);
 	     fclose(f);
 	  }
-	Esnprintf(ss, sizeof(ss), "%s/user_theme.cfg", UserEDir());
+	snprintf(ss, sizeof(ss), "%s/user_theme.cfg", UserEDir());
 	mv(s, ss);
 	if (!isfile(ss))
 	   Alert(_
@@ -3725,7 +3725,7 @@
 	EDBUG_RETURN(0);
      }
    strcpy(themepath, theme);
-   Esnprintf(s, sizeof(s), "%s/", theme);
+   snprintf(s, sizeof(s), "%s/", theme);
 #if USE_FNLIB
    Fnlib_add_dir(pFnlibData, s);
 #endif
diff -ur enlightenment-0.16.6.orig/src/coords.c enlightenment-0.16.6/src/coords.c
--- enlightenment-0.16.6.orig/src/coords.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/coords.c	Wed Nov 12 17:23:52 2003
@@ -47,7 +47,7 @@
    if ((!ic) || (!tc))
       return;
 
-   Esnprintf(s, sizeof(s), "%i x %i (%i, %i)", w, h, x, y);
+   snprintf(s, sizeof(s), "%i x %i (%i, %i)", w, h, x, y);
    TextSize(tc, 0, 0, 0, s, &cw, &ch, 17);
    ewin = mode.ewin;
    cw += (ic->padding.left + ic->padding.right);
diff -ur enlightenment-0.16.6.orig/src/cursors.c enlightenment-0.16.6/src/cursors.c
--- enlightenment-0.16.6.orig/src/cursors.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/cursors.c	Wed Nov 12 17:23:52 2003
@@ -44,7 +44,7 @@
 	if (!img)
 	   return NULL;
 
-	Esnprintf(msk, sizeof(msk), "%s.mask", img);
+	snprintf(msk, sizeof(msk), "%s.mask", img);
 	pmap = 0;
 	mask = 0;
 	xh = 0;
@@ -117,7 +117,7 @@
      {
 	char                stuff[255];
 
-	Esnprintf(stuff, sizeof(stuff), _("%u references remain\n"),
+	snprintf(stuff, sizeof(stuff), _("%u references remain\n"),
 		  ec->ref_count);
 	DIALOG_OK(_("ECursor Error!"), stuff);
 
diff -ur enlightenment-0.16.6.orig/src/desktops.c enlightenment-0.16.6/src/desktops.c
--- enlightenment-0.16.6.orig/src/desktops.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/desktops.c	Wed Nov 12 17:23:52 2003
@@ -77,7 +77,7 @@
 	     Efree(f);
 	  }
      }
-   Esnprintf(s, sizeof(s),
+   snprintf(s, sizeof(s),
 	     "%c%c%c%c%c%c" "%c%c%c%c%c%c" "%c%c%c%c%c%c" "%c%c%c%c%c%c"
 	     "%c%c%c%c%c%c" "%c%c%c%c%c%c" "%c%c%c%c%c%c" "%c%c%c%c%c%c"
 	     "%c%c%c%c%c%c" "%c%c%c%c%c%c" "%c%c%c%c%c%c",
@@ -154,7 +154,7 @@
 	     if (p)
 	       {
 		  p->desktop = i;
-		  Esnprintf(s, sizeof(s), "%i", i);
+		  snprintf(s, sizeof(s), "%i", i);
 		  PagerTitle(p, s);
 		  PagerShow(p);
 	       }
@@ -376,7 +376,7 @@
      {
 	char                stuff[255];
 
-	Esnprintf(stuff, sizeof(stuff), _("%u references remain\n"),
+	snprintf(stuff, sizeof(stuff), _("%u references remain\n"),
 		  bg->ref_count);
 	DIALOG_OK(_("Background Error!"), stuff);
 
@@ -1043,7 +1043,7 @@
 
    for (i = 0; i < ENLIGHTENMENT_CONF_NUM_DESKTOPS; i++)
      {
-	Esnprintf(s, sizeof(s), "DRAGBAR_DESKTOP_%i", i);
+	snprintf(s, sizeof(s), "DRAGBAR_DESKTOP_%i", i);
 	ac = FindItem(s, 0, LIST_FINDBY_NAME, LIST_TYPE_ACLASS);
 	if (!ac)
 	  {
@@ -1052,15 +1052,15 @@
 	     a = CreateAction(EVENT_MOUSE_DOWN, 0, 0, 0, 1, 0, NULL, NULL);
 	     AddAction(ac, a);
 	     param = Emalloc(3);
-	     Esnprintf(param, 3, "%i", i);
+	     snprintf(param, 3, "%i", i);
 	     AddToAction(a, ACTION_DESKTOP_DRAG, param);
 	     a = CreateAction(EVENT_MOUSE_DOWN, 0, 0, 0, 3, 0, NULL, NULL);
 	     AddAction(ac, a);
-	     Esnprintf(s, sizeof(s), "deskmenu");
+	     snprintf(s, sizeof(s), "deskmenu");
 	     AddToAction(a, ACTION_SHOW_MENU, duplicate(s));
 	     a = CreateAction(EVENT_MOUSE_DOWN, 0, 0, 0, 2, 0, NULL, NULL);
 	     AddAction(ac, a);
-	     Esnprintf(s, sizeof(s), "taskmenu");
+	     snprintf(s, sizeof(s), "taskmenu");
 	     AddToAction(a, ACTION_SHOW_MENU, duplicate(s));
 	     if (i > 0)
 	       {
@@ -1086,7 +1086,7 @@
 				"applications currently running.\n"));
 	       }
 	  }
-	Esnprintf(s, sizeof(s), "RAISEBUTTON_DESKTOP_%i", i);
+	snprintf(s, sizeof(s), "RAISEBUTTON_DESKTOP_%i", i);
 	ac2 = FindItem(s, 0, LIST_FINDBY_NAME, LIST_TYPE_ACLASS);
 	if (!ac2)
 	  {
@@ -1095,14 +1095,14 @@
 	     a = CreateAction(EVENT_MOUSE_UP, 1, 0, 1, 0, 0, NULL, NULL);
 	     AddAction(ac2, a);
 	     param = Emalloc(3);
-	     Esnprintf(param, 3, "%i", i);
+	     snprintf(param, 3, "%i", i);
 	     AddToAction(a, ACTION_DESKTOP_RAISE, param);
 	     ac2->tooltipstring =
 		duplicate(_
 			  ("Click here to raise this desktop\n"
 			   "to the top.\n"));
 	  }
-	Esnprintf(s, sizeof(s), "LOWERBUTTON_DESKTOP_%i", i);
+	snprintf(s, sizeof(s), "LOWERBUTTON_DESKTOP_%i", i);
 	ac3 = FindItem(s, 0, LIST_FINDBY_NAME, LIST_TYPE_ACLASS);
 	if (!ac3)
 	  {
@@ -1111,7 +1111,7 @@
 	     a = CreateAction(EVENT_MOUSE_UP, 1, 0, 1, 0, 0, NULL, NULL);
 	     AddAction(ac3, a);
 	     param = Emalloc(3);
-	     Esnprintf(param, 3, "%i", i);
+	     snprintf(param, 3, "%i", i);
 	     AddToAction(a, ACTION_DESKTOP_LOWER, param);
 	     ac3->tooltipstring =
 		duplicate(_
diff -ur enlightenment-0.16.6.orig/src/dock.c enlightenment-0.16.6/src/dock.c
--- enlightenment-0.16.6.orig/src/dock.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/dock.c	Wed Nov 12 17:23:52 2003
@@ -31,7 +31,7 @@
    char                id[32];
 
    EDBUG(3, "DockIt");
-   Esnprintf(id, sizeof(id), "%i", ewin->client.win);
+   snprintf(id, sizeof(id), "%i", ewin->client.win);
    ac = 0;
    ic = FindItem("DEFAULT_DOCK_BUTTON", 0, LIST_FINDBY_NAME, LIST_TYPE_ICLASS);
    if (mode.dockstartx >= 0)
diff -ur enlightenment-0.16.6.orig/src/draw.c enlightenment-0.16.6/src/draw.c
--- enlightenment-0.16.6.orig/src/draw.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/draw.c	Wed Nov 12 17:23:52 2003
@@ -1010,7 +1010,7 @@
       if ((x2) >= (x1)) \
         { \
           XDrawLine(disp, root.win, gc, x1, y1, x2, y1); \
-          Esnprintf(str, sizeof(str), "%i", (x2) - (x1) + 1); \
+          snprintf(str, sizeof(str), "%i", (x2) - (x1) + 1); \
           XDrawString(disp, root.win, gc, ((x1) + (x2)) / 2, (y1) - 10, str, strlen(str)); \
         }
 #define DRAW_V_ARROW(y1, y2, x1) \
@@ -1024,7 +1024,7 @@
       if ((y2) >= (y1)) \
         { \
           XDrawLine(disp, root.win, gc, x1, y1, x1, y2); \
-          Esnprintf(str, sizeof(str), "%i", (y2) - (y1) + 1); \
+          snprintf(str, sizeof(str), "%i", (y2) - (y1) + 1); \
           XDrawString(disp, root.win, gc, x1 + 10, ((y1) + (y2)) / 2, str, strlen(str)); \
         }
 #define DO_DRAW_MODE_1(aa, bb, cc, dd) \
diff -ur enlightenment-0.16.6.orig/src/file.c enlightenment-0.16.6/src/file.c
--- enlightenment-0.16.6.orig/src/file.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/file.c	Wed Nov 12 17:23:52 2003
@@ -52,7 +52,7 @@
    EDBUG(9, "Etmp");
    if (!n_calls)
       n_calls = (unsigned long)time(NULL) + (unsigned long)getpid();
-   Esnprintf(s, 1024, "%s/TMP_%Xl", UserEDir(), n_calls);
+   snprintf(s, 1024, "%s/TMP_%Xl", UserEDir(), n_calls);
    n_calls++;
    EDBUG_RETURN_;
 }
diff -ur enlightenment-0.16.6.orig/src/gnome.c enlightenment-0.16.6/src/gnome.c
--- enlightenment-0.16.6.orig/src/gnome.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/gnome.c	Wed Nov 12 17:23:52 2003
@@ -650,7 +650,7 @@
       atom_set = XInternAtom(disp, XA_WIN_WORKSPACE_NAMES, False);
    for (i = 0; i < mode.numdesktops; i++)
      {
-	Esnprintf(s, sizeof(s), "%i", i);
+	snprintf(s, sizeof(s), "%i", i);
 	names[i] = duplicate(s);
      }
    if (XStringListToTextProperty(names, mode.numdesktops, &text))
diff -ur enlightenment-0.16.6.orig/src/groups.c enlightenment-0.16.6/src/groups.c
--- enlightenment-0.16.6.orig/src/groups.c	Wed Nov  5 18:58:50 2003
+++ enlightenment-0.16.6/src/groups.c	Wed Nov 12 17:23:52 2003
@@ -390,7 +390,7 @@
 	FILE               *f;
 	char                s[1024];
 
-	Esnprintf(s, sizeof(s), "%s/...e_session-XXXXXX.groups.%i", UserEDir(),
+	snprintf(s, sizeof(s), "%s/...e_session-XXXXXX.groups.%i", UserEDir(),
 		  root.scr);
 	f = fopen(s, "w");
 	if (f)
@@ -435,7 +435,7 @@
    FILE               *f;
    char                s[1024];
 
-   Esnprintf(s, sizeof(s), "%s/...e_session-XXXXXX.groups.%i", UserEDir(),
+   snprintf(s, sizeof(s), "%s/...e_session-XXXXXX.groups.%i", UserEDir(),
 	     root.scr);
    f = fopen(s, "r");
    if (f)
diff -ur enlightenment-0.16.6.orig/src/iclass.c enlightenment-0.16.6/src/iclass.c
--- enlightenment-0.16.6.orig/src/iclass.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/iclass.c	Wed Nov 12 17:23:52 2003
@@ -108,7 +108,7 @@
      {
 	char                stuff[255];
 
-	Esnprintf(stuff, sizeof(stuff), _("%u references remain\n"),
+	snprintf(stuff, sizeof(stuff), _("%u references remain\n"),
 		  i->ref_count);
 	DIALOG_OK(_("ImageClass Error!"), stuff);
 	EDBUG_RETURN_;
diff -ur enlightenment-0.16.6.orig/src/iconify.c enlightenment-0.16.6/src/iconify.c
--- enlightenment-0.16.6.orig/src/iconify.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/iconify.c	Wed Nov 12 17:23:52 2003
@@ -1029,7 +1029,7 @@
    char                s[1024];
    FILE               *f;
 
-   Esnprintf(s, sizeof(s), "%s/icondefs.cfg", UserEDir());
+   snprintf(s, sizeof(s), "%s/icondefs.cfg", UserEDir());
    f = fopen(s, "w");
    if (f)
      {
@@ -2376,7 +2376,7 @@
    p_menu->name = duplicate("__IBOX_MENU");
    p_menu->style =
       FindItem("DEFAULT", 0, LIST_FINDBY_NAME, LIST_TYPE_MENU_STYLE);
-   Esnprintf(s, sizeof(s), "iconbox %s", ib->name);
+   snprintf(s, sizeof(s), "iconbox %s", ib->name);
    mi = CreateMenuItem(_("This Iconbox Settings..."), NULL, ACTION_CONFIG, s,
 		       NULL);
    AddItemToMenu(p_menu, mi);
@@ -2386,7 +2386,7 @@
 		       NULL, NULL);
    AddItemToMenu(p_menu, mi);
    AddItem(p_menu, p_menu->name, 0, LIST_TYPE_MENU);
-   Esnprintf(s, sizeof(s), "named %s", p_menu->name);
+   snprintf(s, sizeof(s), "named %s", p_menu->name);
    spawnMenu(s);
    x = 0;
    y = 0;
diff -ur enlightenment-0.16.6.orig/src/ipc.c enlightenment-0.16.6/src/ipc.c
--- enlightenment-0.16.6.orig/src/ipc.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/ipc.c	Wed Nov 12 17:23:52 2003
@@ -626,7 +626,7 @@
 	  {
 	     for (i = 0; cfg_panels[i]; i += 2)
 	       {
-		  Esnprintf(buf2, sizeof(buf2), "%s : %s\n", cfg_panels[i],
+		  snprintf(buf2, sizeof(buf2), "%s : %s\n", cfg_panels[i],
 			    cfg_panels[i + 1]);
 		  strcat(buf, buf2);
 	       }
@@ -745,10 +745,10 @@
 	     SaveSnapInfo();
 	  }
 	else
-	   Esnprintf(buf, sizeof(buf), "Error: no window found");
+	   snprintf(buf, sizeof(buf), "Error: no window found");
      }
    else
-      Esnprintf(buf, sizeof(buf), "Error: no parameters");
+      snprintf(buf, sizeof(buf), "Error: no parameters");
 
    if (buf[0])
       CommsSend(c, buf);
@@ -778,20 +778,20 @@
 	  {
 	     if (mode.kde_support)
 	       {
-		  Esnprintf(buf, sizeof(buf), "kde: active");
+		  snprintf(buf, sizeof(buf), "kde: active");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "kde: inactive");
+		  snprintf(buf, sizeof(buf), "kde: inactive");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown state specified");
+	     snprintf(buf, sizeof(buf), "Error: unknown state specified");
 	  }
      }
    else
-      Esnprintf(buf, sizeof(buf), "Error: no state specified");
+      snprintf(buf, sizeof(buf), "Error: no state specified");
 
    if (buf[0])
       CommsSend(c, buf);
@@ -822,7 +822,7 @@
 	  {
 	     if (!param2[0])
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no module specified");
+		  snprintf(buf, sizeof(buf), "Error: no module specified");
 	       }
 	     else
 	       {
@@ -838,7 +838,7 @@
 	  {
 	     if (!param2[0])
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no module specified");
+		  snprintf(buf, sizeof(buf), "Error: no module specified");
 	       }
 	     else
 	       {
@@ -849,7 +849,7 @@
 		       strcat(buf, ModuleErrorCodeToString(returncode));
 		       if (!buf[0])
 			 {
-			    Esnprintf(buf, sizeof(buf), "");
+			    snprintf(buf, sizeof(buf), "");
 			 }
 		    }
 	       }
@@ -859,18 +859,18 @@
 	     strcat(buf, ModuleListAsString());
 	     if (!buf[0])
 	       {
-		  Esnprintf(buf, sizeof(buf), "no modules loaded");
+		  snprintf(buf, sizeof(buf), "no modules loaded");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf),
+	     snprintf(buf, sizeof(buf),
 		       "Error: unknown module operation specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no module operation specified");
+	snprintf(buf, sizeof(buf), "Error: no module operation specified");
      }
 
    if (buf[0])
@@ -903,7 +903,7 @@
 	       {
 		  if (!strcmp(param2, "?"))
 		    {
-		       Esnprintf(buf, sizeof(buf), "dock_startposition: %d %d",
+		       snprintf(buf, sizeof(buf), "dock_startposition: %d %d",
 				 mode.dockstartx, mode.dockstarty);
 		    }
 		  else
@@ -916,7 +916,7 @@
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "Error: no y coordinate");
 
 			 }
@@ -924,7 +924,7 @@
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+		  snprintf(buf, sizeof(buf), "Error: no operation specified");
 	       }
 	  }
 	else if (!strcmp(param1, "direction"))
@@ -935,23 +935,23 @@
 		    {
 		       if (mode.dockdirmode == DOCK_LEFT)
 			 {
-			    Esnprintf(buf, sizeof(buf), "dock_dir: left");
+			    snprintf(buf, sizeof(buf), "dock_dir: left");
 			 }
 		       else if (mode.dockdirmode == DOCK_RIGHT)
 			 {
-			    Esnprintf(buf, sizeof(buf), "dock_dir: right");
+			    snprintf(buf, sizeof(buf), "dock_dir: right");
 			 }
 		       else if (mode.dockdirmode == DOCK_UP)
 			 {
-			    Esnprintf(buf, sizeof(buf), "dock_dir: up");
+			    snprintf(buf, sizeof(buf), "dock_dir: up");
 			 }
 		       else if (mode.dockdirmode == DOCK_DOWN)
 			 {
-			    Esnprintf(buf, sizeof(buf), "dock_dir: down");
+			    snprintf(buf, sizeof(buf), "dock_dir: down");
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "Error: I have NO " "idea what direction "
 				      "this thing is going");
 			 }
@@ -974,13 +974,13 @@
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "Error: unknown direction " "specified");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+		  snprintf(buf, sizeof(buf), "Error: no operation specified");
 	       }
 	  }
 	else if (!strcmp(param1, "support"))
@@ -989,7 +989,7 @@
 	       {
 		  if (!strcmp(param2, "?"))
 		    {
-		       Esnprintf(buf, sizeof(buf), "dockapp support: %s",
+		       snprintf(buf, sizeof(buf), "dockapp support: %s",
 				 (mode.dockapp_support) ? "enabled" :
 				 "disabled");
 		    }
@@ -997,28 +997,28 @@
 			   || (!strcmp(param2, "enable")))
 		    {
 		       mode.dockapp_support = 1;
-		       Esnprintf(buf, sizeof(buf), "dockapp support: enabled");
+		       snprintf(buf, sizeof(buf), "dockapp support: enabled");
 		    }
 		  else if ((!strcmp(param2, "off"))
 			   || (!strcmp(param2, "disable")))
 		    {
 		       mode.dockapp_support = 0;
-		       Esnprintf(buf, sizeof(buf), "dockapp support: disabled");
+		       snprintf(buf, sizeof(buf), "dockapp support: disabled");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+		  snprintf(buf, sizeof(buf), "Error: no operation specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown mode");
+	     snprintf(buf, sizeof(buf), "Error: unknown mode");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no mode given");
+	snprintf(buf, sizeof(buf), "Error: no mode given");
      }
 
    if (buf[0])
@@ -1036,16 +1036,16 @@
      {
 	if (!strcmp(params, "screen_size"))
 	  {
-	     Esnprintf(buf, sizeof(buf), "screen_size: %d %d", root.w, root.h);
+	     snprintf(buf, sizeof(buf), "screen_size: %d %d", root.w, root.h);
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown info requested");
+	     snprintf(buf, sizeof(buf), "Error: unknown info requested");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no info requested");
+	snprintf(buf, sizeof(buf), "Error: no info requested");
      }
 
    if (buf[0])
@@ -1096,22 +1096,22 @@
 		  b = (Button *) FindItem(param1, 0, LIST_FINDBY_NAME,
 					  LIST_TYPE_BUTTON);
 		  if (b)
-		     Esnprintf(buf, sizeof(buf), "%u references remain",
+		     snprintf(buf, sizeof(buf), "%u references remain",
 			       b->ref_count);
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no cursor specified");
+		  snprintf(buf, sizeof(buf), "Error: no cursor specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown operation specified");
+	     snprintf(buf, sizeof(buf), "Error: unknown operation specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	snprintf(buf, sizeof(buf), "Error: no operation specified");
      }
 
    if (buf[0])
@@ -1149,7 +1149,7 @@
 
 		  if (bg)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "%s ref_count %u\n" " bg.solid\t %i %i %i \n"
 				 " bg.file\t %s \ttop.file\t %s \n"
 				 " bg.tile\t %i \n"
@@ -1167,7 +1167,7 @@
 				 bg->top.yperc);
 		    }
 		  else
-		     Esnprintf(buf, sizeof(buf),
+		     snprintf(buf, sizeof(buf),
 			       "Error: background '%s' does not exist.", name);
 	       }
 	     else
@@ -1184,7 +1184,7 @@
 		       AddItem(bg, bg->name, 0, LIST_TYPE_BACKGROUND);
 		    }
 		  if (!bg)
-		     Esnprintf(buf, sizeof(buf),
+		     snprintf(buf, sizeof(buf),
 			       "Error: could not create background '%s'.",
 			       name);
 		  else
@@ -1264,7 +1264,7 @@
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "Error: unknown background value type '%s'.",
 				      type);
 			 }
@@ -1286,12 +1286,12 @@
 		       FreeDesktopBG(bg);
 		    }
 		  else
-		     Esnprintf(buf, sizeof(buf),
+		     snprintf(buf, sizeof(buf),
 			       "Error: ref_count for background '%s' is %u.",
 			       name, bg->ref_count);
 	       }
 	     else
-		Esnprintf(buf, sizeof(buf),
+		snprintf(buf, sizeof(buf),
 			  "Error: background '%s' does not exist.", name);
 	  }
      }
@@ -1310,7 +1310,7 @@
 	     for (i = 0; i < num; i++)
 	       {
 		  buf2[0] = 0;
-		  Esnprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
+		  snprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
 		  if (buf3)
 		     buf3 = realloc(buf3, strlen(buf3) + strlen(buf2) + 1);
 		  else
@@ -1376,22 +1376,22 @@
 		  b = (Border *) FindItem(param1, 0, LIST_FINDBY_NAME,
 					  LIST_TYPE_BORDER);
 		  if (b)
-		     Esnprintf(buf, sizeof(buf), "%u references remain",
+		     snprintf(buf, sizeof(buf), "%u references remain",
 			       b->ref_count);
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no cursor specified");
+		  snprintf(buf, sizeof(buf), "Error: no cursor specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown operation specified");
+	     snprintf(buf, sizeof(buf), "Error: unknown operation specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	snprintf(buf, sizeof(buf), "Error: no operation specified");
      }
 
    if (buf[0])
@@ -1441,22 +1441,22 @@
 		  ec = (ECursor *) FindItem(param1, 0, LIST_FINDBY_NAME,
 					    LIST_TYPE_ECURSOR);
 		  if (ec)
-		     Esnprintf(buf, sizeof(buf), "%u references remain",
+		     snprintf(buf, sizeof(buf), "%u references remain",
 			       ec->ref_count);
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no cursor specified");
+		  snprintf(buf, sizeof(buf), "Error: no cursor specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown operation specified");
+	     snprintf(buf, sizeof(buf), "Error: unknown operation specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	snprintf(buf, sizeof(buf), "Error: no operation specified");
      }
 
    if (buf[0])
@@ -1553,13 +1553,13 @@
 		       if (txt)
 			 {
 			    TextSize(t, 0, 0, STATE_NORMAL, txt, &w, &h, 17);
-			    Esnprintf(buf, sizeof(buf), "%i %i", w, h);
+			    snprintf(buf, sizeof(buf), "%i %i", w, h);
 			 }
 		       else
-			  Esnprintf(buf, sizeof(buf), "0 0");
+			  snprintf(buf, sizeof(buf), "0 0");
 		    }
 		  else
-		     Esnprintf(buf, sizeof(buf), "TextClass %s not found",
+		     snprintf(buf, sizeof(buf), "TextClass %s not found",
 			       param1);
 	       }
 	     else if (!strcmp(param2, "query"))
@@ -1569,9 +1569,9 @@
 		  t = (TextClass *) FindItem(param1, 0, LIST_FINDBY_NAME,
 					     LIST_TYPE_TCLASS);
 		  if (t)
-		     Esnprintf(buf, sizeof(buf), "TextClass %s found", t->name);
+		     snprintf(buf, sizeof(buf), "TextClass %s found", t->name);
 		  else
-		     Esnprintf(buf, sizeof(buf), "TextClass %s not found",
+		     snprintf(buf, sizeof(buf), "TextClass %s not found",
 			       param1);
 	       }
 	     else if (!strcmp(param2, "ref_count"))
@@ -1581,23 +1581,23 @@
 		  t = (TextClass *) FindItem(param1, 0, LIST_FINDBY_NAME,
 					     LIST_TYPE_TCLASS);
 		  if (t)
-		     Esnprintf(buf, sizeof(buf), "%u references remain.",
+		     snprintf(buf, sizeof(buf), "%u references remain.",
 			       t->ref_count);
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "Error: unknown operation specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no class specified");
+	     snprintf(buf, sizeof(buf), "Error: no class specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	snprintf(buf, sizeof(buf), "Error: no operation specified");
      }
 
    if (buf[0])
@@ -1649,23 +1649,23 @@
 						       LIST_FINDBY_NAME,
 						       LIST_TYPE_COLORMODIFIER);
 		  if (cm)
-		     Esnprintf(buf, sizeof(buf), "%u references remain.",
+		     snprintf(buf, sizeof(buf), "%u references remain.",
 			       cm->ref_count);
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "Error: unknown operation specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no class specified");
+	     snprintf(buf, sizeof(buf), "Error: no class specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	snprintf(buf, sizeof(buf), "Error: no operation specified");
      }
 
    if (buf[0])
@@ -1715,23 +1715,23 @@
 		  a = (ActionClass *) FindItem(param1, 0, LIST_FINDBY_NAME,
 					       LIST_TYPE_ACLASS);
 		  if (a)
-		     Esnprintf(buf, sizeof(buf), "%u references remain.",
+		     snprintf(buf, sizeof(buf), "%u references remain.",
 			       a->ref_count);
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "Error: unknown operation specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no class specified");
+	     snprintf(buf, sizeof(buf), "Error: no class specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	snprintf(buf, sizeof(buf), "Error: no operation specified");
      }
 
    if (buf[0])
@@ -1791,11 +1791,11 @@
 		     (ImageClass *) FindItem(param1, 0, LIST_FINDBY_NAME,
 					     LIST_TYPE_ICLASS);
 		  if (iclass)
-		     Esnprintf(buf, sizeof(buf), "%i %i %i %i",
+		     snprintf(buf, sizeof(buf), "%i %i %i %i",
 			       iclass->padding.left, iclass->padding.right,
 			       iclass->padding.top, iclass->padding.bottom);
 		  else
-		     Esnprintf(buf, sizeof(buf),
+		     snprintf(buf, sizeof(buf),
 			       "Error: Imageclass does not exist");
 	       }
 	     else if (!strcmp(param2, "get_image_size"))
@@ -1820,20 +1820,20 @@
 						     normal->real_file);
 			    if (im)
 			      {
-				 Esnprintf(buf, sizeof(buf), "%i %i",
+				 snprintf(buf, sizeof(buf), "%i %i",
 					   im->rgb_width, im->rgb_height);
 				 Imlib_destroy_image(pImlibData, im);
 			      }
 			    else
-			       Esnprintf(buf, sizeof(buf),
+			       snprintf(buf, sizeof(buf),
 					 "Error: Image does not exist");
 			 }
 		       else
-			  Esnprintf(buf, sizeof(buf),
+			  snprintf(buf, sizeof(buf),
 				    "Error: Image does not exist");
 		    }
 		  else
-		     Esnprintf(buf, sizeof(buf),
+		     snprintf(buf, sizeof(buf),
 			       "Error: Imageclass does not exist");
 	       }
 	     else if (!strcmp(param2, "apply"))
@@ -1898,7 +1898,7 @@
 		       else
 			  st = STATE_NORMAL;
 		       if (!(hptr = atword(params, 6)))
-			  Esnprintf(buf, sizeof(buf),
+			  snprintf(buf, sizeof(buf),
 				    "Error:  missing width and/or height");
 		       else
 			 {
@@ -1910,7 +1910,7 @@
 			    IclassApplyCopy(iclass, win, w, h, 0, 0, st, &pmap,
 					    &mask);
 			    queue_up = pq;
-			    Esnprintf(buf, sizeof(buf), "0x%08x 0x%08x", pmap,
+			    snprintf(buf, sizeof(buf), "0x%08x 0x%08x", pmap,
 				      mask);
 			 }
 		    }
@@ -1922,7 +1922,7 @@
 		  i = (ImageClass *) FindItem(param1, 0, LIST_FINDBY_NAME,
 					      LIST_TYPE_ICLASS);
 		  if (i)
-		     Esnprintf(buf, sizeof(buf), "%u references remain",
+		     snprintf(buf, sizeof(buf), "%u references remain",
 			       i->ref_count);
 	       }
 	     else if (!strcmp(param2, "query"))
@@ -1932,26 +1932,26 @@
 		  i = (ImageClass *) FindItem(param1, 0, LIST_FINDBY_NAME,
 					      LIST_TYPE_ICLASS);
 		  if (i)
-		     Esnprintf(buf, sizeof(buf), "ImageClass %s found",
+		     snprintf(buf, sizeof(buf), "ImageClass %s found",
 			       i->name);
 		  else
-		     Esnprintf(buf, sizeof(buf), "ImageClass %s not found",
+		     snprintf(buf, sizeof(buf), "ImageClass %s not found",
 			       param1);
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "Error: unknown operation specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no class specified");
+	     snprintf(buf, sizeof(buf), "Error: no class specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	snprintf(buf, sizeof(buf), "Error: no operation specified");
      }
 
    if (buf[0])
@@ -1991,7 +1991,7 @@
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "Error: no file specified");
+		       snprintf(buf, sizeof(buf), "Error: no file specified");
 		    }
 	       }
 	     else if (!strcmp(param1, "delete"))
@@ -2002,18 +2002,18 @@
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "Error: unknown operation specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no class specified");
+	     snprintf(buf, sizeof(buf), "Error: no class specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	snprintf(buf, sizeof(buf), "Error: no operation specified");
      }
 
    if (buf[0])
@@ -2035,11 +2035,11 @@
 	if (soundtoplay)
 	   ApplySclass(soundtoplay);
 	else
-	   Esnprintf(buf, sizeof(buf), "Error: unknown soundclass selected");
+	   snprintf(buf, sizeof(buf), "Error: unknown soundclass selected");
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no soundclass selected");
+	snprintf(buf, sizeof(buf), "Error: no soundclass selected");
      }
 
    if (buf[0])
@@ -2064,7 +2064,7 @@
 	     for (i = 0; i < num; i++)
 	       {
 		  buf2[0] = 0;
-		  Esnprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
+		  snprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
 		  if (buf)
 		     buf = realloc(buf, strlen(buf) + strlen(buf2) + 1);
 		  else
@@ -2085,7 +2085,7 @@
 	     for (i = 0; i < num; i++)
 	       {
 		  buf2[0] = 0;
-		  Esnprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
+		  snprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
 		  if (buf)
 		     buf = realloc(buf, strlen(buf) + strlen(buf2) + 1);
 		  else
@@ -2106,7 +2106,7 @@
 	     for (i = 0; i < num; i++)
 	       {
 		  buf2[0] = 0;
-		  Esnprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
+		  snprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
 		  if (buf)
 		     buf = realloc(buf, strlen(buf) + strlen(buf2) + 1);
 		  else
@@ -2127,7 +2127,7 @@
 	     for (i = 0; i < num; i++)
 	       {
 		  buf2[0] = 0;
-		  Esnprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
+		  snprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
 		  if (buf)
 		     buf = realloc(buf, strlen(buf) + strlen(buf2) + 1);
 		  else
@@ -2148,7 +2148,7 @@
 	     for (i = 0; i < num; i++)
 	       {
 		  buf2[0] = 0;
-		  Esnprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
+		  snprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
 		  if (buf)
 		     buf = realloc(buf, strlen(buf) + strlen(buf2) + 1);
 		  else
@@ -2169,7 +2169,7 @@
 	     for (i = 0; i < num; i++)
 	       {
 		  buf2[0] = 0;
-		  Esnprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
+		  snprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
 		  if (buf)
 		     buf = realloc(buf, strlen(buf) + strlen(buf2) + 1);
 		  else
@@ -2190,7 +2190,7 @@
 	     for (i = 0; i < num; i++)
 	       {
 		  buf2[0] = 0;
-		  Esnprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
+		  snprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
 		  if (buf)
 		     buf = realloc(buf, strlen(buf) + strlen(buf2) + 1);
 		  else
@@ -2211,7 +2211,7 @@
 	     for (i = 0; i < num; i++)
 	       {
 		  buf2[0] = 0;
-		  Esnprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
+		  snprintf(buf2, sizeof(buf2), "%s\n", lst[i]->name);
 		  if (buf)
 		     buf = realloc(buf, strlen(buf) + strlen(buf2) + 1);
 		  else
@@ -2249,7 +2249,7 @@
 	DIALOG_OK(_("Message"), params);
      }
    else
-      Esnprintf(buf, sizeof(buf), "Error: No text for dialog specified");
+      snprintf(buf, sizeof(buf), "Error: No text for dialog specified");
 
    if (buf[0])
       CommsSend(c, buf);
@@ -2271,12 +2271,12 @@
 	     my_focused_win = GetFocusEwin();
 	     if (my_focused_win)
 	       {
-		  Esnprintf(buf, sizeof(buf), "focused: %8x",
+		  snprintf(buf, sizeof(buf), "focused: %8x",
 			    my_focused_win->client.win);
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "focused: none");
+		  snprintf(buf, sizeof(buf), "focused: none");
 	       }
 	  }
 	else
@@ -2291,7 +2291,7 @@
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no window selected");
+	snprintf(buf, sizeof(buf), "Error: no window selected");
      }
 
    if (buf[0])
@@ -2328,16 +2328,16 @@
 	       {
 		  if (mode.all_new_windows_get_focus)
 		    {
-		       Esnprintf(buf, sizeof(buf), "new_window_focus: on");
+		       snprintf(buf, sizeof(buf), "new_window_focus: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "new_window_focus: off");
+		       snprintf(buf, sizeof(buf), "new_window_focus: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "focus_list"))
@@ -2354,16 +2354,16 @@
 	       {
 		  if (mode.display_warp)
 		    {
-		       Esnprintf(buf, sizeof(buf), "focus_list: on");
+		       snprintf(buf, sizeof(buf), "focus_list: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "focus_list: off");
+		       snprintf(buf, sizeof(buf), "focus_list: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "new_popup_window_focus"))
@@ -2380,18 +2380,18 @@
 	       {
 		  if (mode.new_transients_get_focus)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "new_popup_window_focus: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "new_popup_window_focus: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "new_popup_of_owner_focus"))
@@ -2408,18 +2408,18 @@
 	       {
 		  if (mode.new_transients_get_focus_if_group_focused)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "new_popup_of_owner_focus: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "new_popup_of_owner_focus: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "raise_on_keyboard_focus_switch"))
@@ -2436,18 +2436,18 @@
 	       {
 		  if (mode.raise_on_next_focus)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "raise_on_keyboard_focus_switch: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "raise_on_keyboard_focus_switch: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "raise_after_keyboard_focus_switch"))
@@ -2464,18 +2464,18 @@
 	       {
 		  if (mode.raise_after_next_focus)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "raise_after_keyboard_focus_switch: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "raise_after_keyboard_focus_switch: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "display_warp"))
@@ -2492,16 +2492,16 @@
 	       {
 		  if (mode.display_warp)
 		    {
-		       Esnprintf(buf, sizeof(buf), "display_warp: on");
+		       snprintf(buf, sizeof(buf), "display_warp: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "display_warp: off");
+		       snprintf(buf, sizeof(buf), "display_warp: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "pointer_to_keyboard_focus_window"))
@@ -2518,18 +2518,18 @@
 	       {
 		  if (mode.warp_on_next_focus)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "pointer_to_keyboard_focus_window: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "pointer_to_keyboard_focus_window: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "pointer_after_keyboard_focus_window"))
@@ -2546,18 +2546,18 @@
 	       {
 		  if (mode.warp_after_next_focus)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "pointer_after_keyboard_focus_window: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "pointer_after_keyboard_focus_window: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "transients_follow_leader"))
@@ -2574,18 +2574,18 @@
 	       {
 		  if (mode.transientsfollowleader)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "transients_follow_leader: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "transients_follow_leader: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "switch_to_popup_location"))
@@ -2602,18 +2602,18 @@
 	       {
 		  if (mode.switchfortransientmap)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "switch_to_popup_location: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "switch_to_popup_location: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "manual_placement"))
@@ -2630,16 +2630,16 @@
 	       {
 		  if (mode.manual_placement)
 		    {
-		       Esnprintf(buf, sizeof(buf), "manual_placement: on");
+		       snprintf(buf, sizeof(buf), "manual_placement: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "manual_placement: off");
+		       snprintf(buf, sizeof(buf), "manual_placement: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "manual_placement_mouse_pointer"))
@@ -2656,28 +2656,28 @@
 	       {
 		  if (mode.manual_placement_mouse_pointer)
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "manual_placement_mouse_pointer: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "manual_placement_mouse_pointer: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+	     snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no mode selected");
+	snprintf(buf, sizeof(buf), "Error: no mode selected");
      }
 
    if (buf[0])
@@ -2705,7 +2705,7 @@
 	       {
 		  if (lst[i]->pager)
 		    {
-		       Esnprintf(buf2, sizeof(buf2), "%8x\n",
+		       snprintf(buf2, sizeof(buf2), "%8x\n",
 				 lst[i]->client.win);
 		       strcat(buf, buf2);
 		    }
@@ -2717,7 +2717,7 @@
 	       {
 		  if (lst[i]->menu)
 		    {
-		       Esnprintf(buf2, sizeof(buf2), "%8x\n",
+		       snprintf(buf2, sizeof(buf2), "%8x\n",
 				 lst[i]->client.win);
 		       strcat(buf, buf2);
 		    }
@@ -2729,7 +2729,7 @@
 	       {
 		  if (lst[i]->dialog)
 		    {
-		       Esnprintf(buf2, sizeof(buf2), "%8x\n",
+		       snprintf(buf2, sizeof(buf2), "%8x\n",
 				 lst[i]->client.win);
 		       strcat(buf, buf2);
 		    }
@@ -2741,7 +2741,7 @@
 	       {
 		  if (lst[i]->internal)
 		    {
-		       Esnprintf(buf2, sizeof(buf2), "%8x\n",
+		       snprintf(buf2, sizeof(buf2), "%8x\n",
 				 lst[i]->client.win);
 		       strcat(buf, buf2);
 		    }
@@ -2749,7 +2749,7 @@
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf),
+	     snprintf(buf, sizeof(buf),
 		       "Error: unknown internal list specified");
 	  }
 
@@ -2788,11 +2788,11 @@
 	  {
 	     if (mode.show_pagers)
 	       {
-		  Esnprintf(buf, sizeof(buf), "pager: on");
+		  snprintf(buf, sizeof(buf), "pager: on");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "pager: off");
+		  snprintf(buf, sizeof(buf), "pager: off");
 	       }
 	  }
 	else if (!strcmp(param1, "hiq"))
@@ -2802,11 +2802,11 @@
 	       {
 		  if (mode.pager_hiq)
 		    {
-		       Esnprintf(buf, sizeof(buf), "pager_hiq: on");
+		       snprintf(buf, sizeof(buf), "pager_hiq: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "pager_hiq: off");
+		       snprintf(buf, sizeof(buf), "pager_hiq: off");
 		    }
 	       }
 	     else if (!strcmp(param2, "on"))
@@ -2819,7 +2819,7 @@
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode selected");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode selected");
 
 	       }
 	  }
@@ -2849,13 +2849,13 @@
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "Error: unknown mode selected");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no mode selected");
+		  snprintf(buf, sizeof(buf), "Error: no mode selected");
 	       }
 	  }
 	else if (!strcmp(param1, "title"))
@@ -2884,7 +2884,7 @@
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "Error: no mode selected");
+		       snprintf(buf, sizeof(buf), "Error: no mode selected");
 		    }
 	       }
 	  }
@@ -2895,7 +2895,7 @@
 	       {
 		  if (!strcmp(param2, "?"))
 		    {
-		       Esnprintf(buf, sizeof(buf), "pager_scanrate: %d",
+		       snprintf(buf, sizeof(buf), "pager_scanrate: %d",
 				 mode.pager_scanspeed);
 		    }
 		  else
@@ -2905,7 +2905,7 @@
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no scanrate specified.");
+		  snprintf(buf, sizeof(buf), "Error: no scanrate specified.");
 	       }
 	  }
 	else if (!strcmp(param1, "snap"))
@@ -2915,11 +2915,11 @@
 	       {
 		  if (mode.pager_hiq)
 		    {
-		       Esnprintf(buf, sizeof(buf), "pager_snap: on");
+		       snprintf(buf, sizeof(buf), "pager_snap: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "pager_snap: off");
+		       snprintf(buf, sizeof(buf), "pager_snap: off");
 		    }
 	       }
 	     else if (!strcmp(param2, "on"))
@@ -2955,12 +2955,12 @@
 		    }
 		  else if (!strcmp(param3, "?"))
 		    {
-		       Esnprintf(buf, sizeof(buf), "Desk %s: %i pagers", param2,
+		       snprintf(buf, sizeof(buf), "Desk %s: %i pagers", param2,
 				 PagerForDesktop(atoi(param2)));
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "Error: unknown mode specified");
 		    }
 	       }
@@ -2968,22 +2968,22 @@
 	       {
 		  if (param2[0])
 		    {
-		       Esnprintf(buf, sizeof(buf), "Error: no mode specified");
+		       snprintf(buf, sizeof(buf), "Error: no mode specified");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "Error: no desk specified");
+		       snprintf(buf, sizeof(buf), "Error: no desk specified");
 		    }
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+	     snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no mode specified");
+	snprintf(buf, sizeof(buf), "Error: no mode specified");
      }
 
    if (buf[0])
@@ -3028,29 +3028,29 @@
 	     if (mode.movemode)
 	       {
 		  if (mode.movemode == 1)
-		     Esnprintf(buf, sizeof(buf), "movemode: lined");
+		     snprintf(buf, sizeof(buf), "movemode: lined");
 		  else if (mode.movemode == 2)
-		     Esnprintf(buf, sizeof(buf), "movemode: box");
+		     snprintf(buf, sizeof(buf), "movemode: box");
 		  else if (mode.movemode == 3)
-		     Esnprintf(buf, sizeof(buf), "movemode: shaded");
+		     snprintf(buf, sizeof(buf), "movemode: shaded");
 		  else if (mode.movemode == 4)
-		     Esnprintf(buf, sizeof(buf), "movemode: semi-solid");
+		     snprintf(buf, sizeof(buf), "movemode: semi-solid");
 		  else if (mode.movemode == 5)
-		     Esnprintf(buf, sizeof(buf), "movemode: translucent");
+		     snprintf(buf, sizeof(buf), "movemode: translucent");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "movemode: opaque");
+		  snprintf(buf, sizeof(buf), "movemode: opaque");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+	     snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no mode specified");
+	snprintf(buf, sizeof(buf), "Error: no mode specified");
      }
 
    if (buf[0])
@@ -3091,27 +3091,27 @@
 	     if (mode.resizemode)
 	       {
 		  if (mode.resizemode == 1)
-		     Esnprintf(buf, sizeof(buf), "resizemode: lined");
+		     snprintf(buf, sizeof(buf), "resizemode: lined");
 		  else if (mode.resizemode == 2)
-		     Esnprintf(buf, sizeof(buf), "resizemode: box");
+		     snprintf(buf, sizeof(buf), "resizemode: box");
 		  else if (mode.resizemode == 3)
-		     Esnprintf(buf, sizeof(buf), "resizemode: shaded");
+		     snprintf(buf, sizeof(buf), "resizemode: shaded");
 		  else if (mode.resizemode == 4)
-		     Esnprintf(buf, sizeof(buf), "resizemode: semi-solid");
+		     snprintf(buf, sizeof(buf), "resizemode: semi-solid");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "resizemode: opaque");
+		  snprintf(buf, sizeof(buf), "resizemode: opaque");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+	     snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no mode specified");
+	snprintf(buf, sizeof(buf), "Error: no mode specified");
      }
 
    if (buf[0])
@@ -3144,23 +3144,23 @@
 	     if (mode.geominfomode)
 	       {
 		  if (mode.geominfomode == 1)
-		     Esnprintf(buf, sizeof(buf), "geominfomode: center");
+		     snprintf(buf, sizeof(buf), "geominfomode: center");
 		  else if (mode.geominfomode == 2)
-		     Esnprintf(buf, sizeof(buf), "geominfomode: corner");
+		     snprintf(buf, sizeof(buf), "geominfomode: corner");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "geominfomode: never");
+		  snprintf(buf, sizeof(buf), "geominfomode: never");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+	     snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no mode specified");
+	snprintf(buf, sizeof(buf), "Error: no mode specified");
      }
 
    if (buf[0])
@@ -3196,10 +3196,10 @@
 	     else if (!strcmp(word2, "off"))
 		FX_Op(word1, FX_OP_STOP);
 	     else if (!strcmp(word2, "?"))
-		Esnprintf(buf, sizeof(buf), "%s: %s", word1,
+		snprintf(buf, sizeof(buf), "%s: %s", word1,
 			  FX_IsOn(word1) ? "on" : "off");
 	     else
-		Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+		snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	  }
 	else if (!strcmp(word1, "deskslide"))
 	  {
@@ -3215,13 +3215,13 @@
 	     else if (!strcmp(word2, "?"))
 	       {
 		  if (desks.slidein)
-		     Esnprintf(buf, sizeof(buf), "deskslide: on");
+		     snprintf(buf, sizeof(buf), "deskslide: on");
 		  else
-		     Esnprintf(buf, sizeof(buf), "deskslide: off");
+		     snprintf(buf, sizeof(buf), "deskslide: off");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	       }
 	  }
 	else if (!strcmp(word1, "mapslide"))
@@ -3238,13 +3238,13 @@
 	     else if (!strcmp(word2, "?"))
 	       {
 		  if (mode.mapslide)
-		     Esnprintf(buf, sizeof(buf), "mapslide: on");
+		     snprintf(buf, sizeof(buf), "mapslide: on");
 		  else
-		     Esnprintf(buf, sizeof(buf), "mapslide: off");
+		     snprintf(buf, sizeof(buf), "mapslide: off");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	       }
 	  }
 	else if (!strcmp(word1, "menu_animate"))
@@ -3261,13 +3261,13 @@
 	     else if (!strcmp(word2, "?"))
 	       {
 		  if (mode.menuslide)
-		     Esnprintf(buf, sizeof(buf), "menu_animate: on");
+		     snprintf(buf, sizeof(buf), "menu_animate: on");
 		  else
-		     Esnprintf(buf, sizeof(buf), "menu_animate: off");
+		     snprintf(buf, sizeof(buf), "menu_animate: off");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	       }
 	  }
 	else if (!strcmp(word1, "animate_win_shading"))
@@ -3284,13 +3284,13 @@
 	     else if (!strcmp(word2, "?"))
 	       {
 		  if (mode.animate_shading)
-		     Esnprintf(buf, sizeof(buf), "animate_win_shading: on");
+		     snprintf(buf, sizeof(buf), "animate_win_shading: on");
 		  else
-		     Esnprintf(buf, sizeof(buf), "animate_win_shading: off");
+		     snprintf(buf, sizeof(buf), "animate_win_shading: off");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	       }
 	  }
 	else if (!strcmp(word1, "window_shade_speed"))
@@ -3300,12 +3300,12 @@
 	       {
 		  if (mode.animate_shading)
 		    {
-		       Esnprintf(buf, sizeof(buf), "shadespeed: %d seconds",
+		       snprintf(buf, sizeof(buf), "shadespeed: %d seconds",
 				 mode.shadespeed);
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "shadespeed: off");
+		       snprintf(buf, sizeof(buf), "shadespeed: off");
 		    }
 	       }
 	     else
@@ -3360,29 +3360,29 @@
 		    {
 		       if (desks.dragdir == 1)
 			 {
-			    Esnprintf(buf, sizeof(buf), "Dragbar: right");
+			    snprintf(buf, sizeof(buf), "Dragbar: right");
 			 }
 		       else if (desks.dragdir == 2)
 			 {
-			    Esnprintf(buf, sizeof(buf), "Dragbar: top");
+			    snprintf(buf, sizeof(buf), "Dragbar: top");
 			 }
 		       else if (desks.dragdir == 3)
 			 {
-			    Esnprintf(buf, sizeof(buf), "Dragbar: bottom");
+			    snprintf(buf, sizeof(buf), "Dragbar: bottom");
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf), "Dragbar: left");
+			    snprintf(buf, sizeof(buf), "Dragbar: left");
 			 }
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "Dragbar: off");
+		       snprintf(buf, sizeof(buf), "Dragbar: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	       }
 
 	     if (move)
@@ -3421,12 +3421,12 @@
 	       {
 		  if (mode.tooltips)
 		    {
-		       Esnprintf(buf, sizeof(buf), "tooltips: %f seconds",
+		       snprintf(buf, sizeof(buf), "tooltips: %f seconds",
 				 mode.tiptime);
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "tooltips: off");
+		       snprintf(buf, sizeof(buf), "tooltips: off");
 		    }
 	       }
 	     else
@@ -3451,13 +3451,13 @@
 		    {
 		       if (mode.edge_flip_resistance >= 0)
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "edge_resistance: %d / 100 seconds",
 				      mode.edge_flip_resistance);
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf), "edge_resistance: off");
+			    snprintf(buf, sizeof(buf), "edge_resistance: off");
 			 }
 		    }
 		  else
@@ -3467,7 +3467,7 @@
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no time given");
+		  snprintf(buf, sizeof(buf), "Error: no time given");
 	       }
 	  }
 	else if (!strcmp(word1, "edge_snap_distance"))
@@ -3477,7 +3477,7 @@
 	       {
 		  if (!strcmp(word2, "?"))
 		    {
-		       Esnprintf(buf, sizeof(buf), "edge_snap_distance: %d",
+		       snprintf(buf, sizeof(buf), "edge_snap_distance: %d",
 				 mode.edge_snap_dist);
 		    }
 		  else
@@ -3487,7 +3487,7 @@
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no pixel distance given");
+		  snprintf(buf, sizeof(buf), "Error: no pixel distance given");
 	       }
 	  }
 	else if (!strcmp(word1, "autoraise"))
@@ -3505,12 +3505,12 @@
 	       {
 		  if (mode.autoraise)
 		    {
-		       Esnprintf(buf, sizeof(buf), "autoraise: %f seconds",
+		       snprintf(buf, sizeof(buf), "autoraise: %f seconds",
 				 mode.autoraisetime);
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "autoraise: off");
+		       snprintf(buf, sizeof(buf), "autoraise: off");
 		    }
 	       }
 	     else
@@ -3562,23 +3562,23 @@
 	     else if (!strcmp(word2, "?"))
 	       {
 		  if (mode.sound)
-		     Esnprintf(buf, sizeof(buf), "audio: on");
+		     snprintf(buf, sizeof(buf), "audio: on");
 		  else
-		     Esnprintf(buf, sizeof(buf), "audio: off");
+		     snprintf(buf, sizeof(buf), "audio: off");
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown mode specified");
+		  snprintf(buf, sizeof(buf), "Error: unknown mode specified");
 	       }
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown effect specified");
+	     snprintf(buf, sizeof(buf), "Error: unknown effect specified");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no effect specified");
+	snprintf(buf, sizeof(buf), "Error: no effect specified");
      }
 
    if (buf[0])
@@ -3615,25 +3615,25 @@
 	       {
 		  if (mode.activenetwork)
 		    {
-		       Esnprintf(buf, sizeof(buf), "Active network: on");
+		       snprintf(buf, sizeof(buf), "Active network: on");
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "Active network: off");
+		       snprintf(buf, sizeof(buf), "Active network: off");
 		    }
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: unknown state.");
+		  snprintf(buf, sizeof(buf), "Error: unknown state.");
 	       }
 	  }
 #else
-	Esnprintf(buf, sizeof(buf),
+	snprintf(buf, sizeof(buf),
 		  "Active Network not compiled into this version of E");
 #endif
      }
    else
-      Esnprintf(buf, sizeof(buf), "Error: no state specified");
+      snprintf(buf, sizeof(buf), "Error: no state specified");
 
    if (buf[0])
       CommsSend(c, buf);
@@ -3672,7 +3672,7 @@
 		e->client.title = none;
 	     if (params)
 	       {
-		  Esnprintf(buf, sizeof(buf),
+		  snprintf(buf, sizeof(buf),
 			    "%8x : %s :: %d : %d %d : %d %d\n",
 			    e->client.win, e->client.title,
 			    (e->sticky) ? -1 : e->desktop, e->area_x, e->area_y,
@@ -3680,7 +3680,7 @@
 	       }
 	     else
 	       {
-		  Esnprintf(buf, sizeof(buf), "%8x : %s\n", e->client.win,
+		  snprintf(buf, sizeof(buf), "%8x : %s\n", e->client.win,
 			    e->client.title);
 	       }
 	     if (!ret)
@@ -3722,7 +3722,7 @@
 
    if (!params)
      {
-	Esnprintf(buf, sizeof(buf), "Error: no area specified");
+	snprintf(buf, sizeof(buf), "Error: no area specified");
      }
    else
      {
@@ -3770,7 +3770,7 @@
 	else if (!strcmp(param1, "?"))
 	  {
 	     GetCurrentArea(&a, &b);
-	     Esnprintf(buf, sizeof(buf), "Current Area: %d %d", a, b);
+	     snprintf(buf, sizeof(buf), "Current Area: %d %d", a, b);
 	  }
 	else
 	  {
@@ -3822,7 +3822,7 @@
 	word(params, 2, operation);
 	if (!operation[0])
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	     snprintf(buf, sizeof(buf), "Error: no operation specified");
 	  }
 	else
 	  {
@@ -3831,7 +3831,7 @@
 	     ewin = FindEwinByChildren(win);
 	     if (!ewin)
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no such window: %8x",
+		  snprintf(buf, sizeof(buf), "Error: no such window: %8x",
 			    win);
 	       }
 	     else
@@ -3868,15 +3868,15 @@
 			    else if (!strcmp(param1, "?"))
 			      {
 				 if (ewin->iconified)
-				    Esnprintf(buf, sizeof(buf),
+				    snprintf(buf, sizeof(buf),
 					      "window iconified: yes");
 				 else
-				    Esnprintf(buf, sizeof(buf),
+				    snprintf(buf, sizeof(buf),
 					      "window iconified: no");
 			      }
 			    else
 			      {
-				 Esnprintf(buf, sizeof(buf),
+				 snprintf(buf, sizeof(buf),
 					   "Error: unknown mode specified");
 			      }
 			 }
@@ -3906,15 +3906,15 @@
 			    else if (!strcmp(param1, "?"))
 			      {
 				 if (ewin->shaded)
-				    Esnprintf(buf, sizeof(buf),
+				    snprintf(buf, sizeof(buf),
 					      "window shaded: yes");
 				 else
-				    Esnprintf(buf, sizeof(buf),
+				    snprintf(buf, sizeof(buf),
 					      "window shaded: no");
 			      }
 			    else
 			      {
-				 Esnprintf(buf, sizeof(buf),
+				 snprintf(buf, sizeof(buf),
 					   "Error: unknown mode specified");
 			      }
 			 }
@@ -3944,15 +3944,15 @@
 			    else if (!strcmp(param1, "?"))
 			      {
 				 if (ewin->sticky)
-				    Esnprintf(buf, sizeof(buf),
+				    snprintf(buf, sizeof(buf),
 					      "window sticky: yes");
 				 else
-				    Esnprintf(buf, sizeof(buf),
+				    snprintf(buf, sizeof(buf),
 					      "window sticky: no");
 			      }
 			    else
 			      {
-				 Esnprintf(buf, sizeof(buf),
+				 snprintf(buf, sizeof(buf),
 					   "Error: unknown mode specified");
 			      }
 			 }
@@ -3979,7 +3979,7 @@
 				 if (!strncmp(ptr, "?", 1))
 				   {
 				      /* return the window title */
-				      Esnprintf(buf, sizeof(buf),
+				      snprintf(buf, sizeof(buf),
 						"window title: %s",
 						ewin->client.title);
 				   }
@@ -4001,7 +4001,7 @@
 			    else
 			      {
 				 /* error */
-				 Esnprintf(buf, sizeof(buf),
+				 snprintf(buf, sizeof(buf),
 					   "Error: no title specified");
 			      }
 			 }
@@ -4034,7 +4034,7 @@
 		       word(params, 3, param1);
 		       if (!strcmp(param1, "?"))
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "window layer: %d", ewin->layer);
 			 }
 		       else
@@ -4057,7 +4057,7 @@
 				   {
 				      if (ewin->border->name)
 					{
-					   Esnprintf(buf, sizeof(buf),
+					   snprintf(buf, sizeof(buf),
 						     "window border: %s",
 						     ewin->border->name);
 					}
@@ -4081,7 +4081,7 @@
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "Error: no border specified");
 			 }
 		    }
@@ -4106,7 +4106,7 @@
 			      }
 			    else if (!strcmp(param1, "?"))
 			      {
-				 Esnprintf(buf, sizeof(buf), "window desk: %d",
+				 snprintf(buf, sizeof(buf), "window desk: %d",
 					   ewin->desktop);
 			      }
 			    else
@@ -4119,7 +4119,7 @@
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "Error: no desktop supplied");
 			 }
 		    }
@@ -4132,7 +4132,7 @@
 			 {
 			    if (!strcmp(param1, "?"))
 			      {
-				 Esnprintf(buf, sizeof(buf),
+				 snprintf(buf, sizeof(buf),
 					   "window area: %d %d", ewin->area_x,
 					   ewin->area_y);
 			      }
@@ -4144,7 +4144,7 @@
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "Error: no area supplied");
 			 }
 		    }
@@ -4165,13 +4165,13 @@
 			 {
 			    if (!strcmp(param1, "?"))
 			      {
-				 Esnprintf(buf, sizeof(buf),
+				 snprintf(buf, sizeof(buf),
 					   "window location: %d %d", ewin->x,
 					   ewin->y);
 			      }
 			    else if (!strcmp(param1, "??"))
 			      {
-				 Esnprintf(buf, sizeof(buf),
+				 snprintf(buf, sizeof(buf),
 					   "client location: %d %d",
 					   ewin->x + ewin->border->border.left,
 					   ewin->y + ewin->border->border.top);
@@ -4185,7 +4185,7 @@
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "Error: no coords supplied");
 			 }
 		    }
@@ -4198,13 +4198,13 @@
 			 {
 			    if (!strcmp(param1, "?"))
 			      {
-				 Esnprintf(buf, sizeof(buf),
+				 snprintf(buf, sizeof(buf),
 					   "window size: %d %d", ewin->client.w,
 					   ewin->client.h);
 			      }
 			    else if (!strcmp(param1, "??"))
 			      {
-				 Esnprintf(buf, sizeof(buf),
+				 snprintf(buf, sizeof(buf),
 					   "frame size: %d %d", ewin->w,
 					   ewin->h);
 			      }
@@ -4249,11 +4249,11 @@
 			 {
 			    if (ewin == GetFocusEwin())
 			      {
-				 Esnprintf(buf, sizeof(buf), "focused: yes");
+				 snprintf(buf, sizeof(buf), "focused: yes");
 			      }
 			    else
 			      {
-				 Esnprintf(buf, sizeof(buf), "focused: no");
+				 snprintf(buf, sizeof(buf), "focused: no");
 			      }
 			 }
 		       else
@@ -4263,14 +4263,14 @@
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "Error: unknown operation");
+		       snprintf(buf, sizeof(buf), "Error: unknown operation");
 		    }
 	       }
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no window specified");
+	snprintf(buf, sizeof(buf), "Error: no window specified");
      }
 
    if (buf[0])
@@ -4290,7 +4290,7 @@
 	     int                 ax, ay;
 
 	     GetAreaSize(&ax, &ay);
-	     Esnprintf(buf, sizeof(buf), "Number of Areas: %d %d", ax, ay);
+	     snprintf(buf, sizeof(buf), "Number of Areas: %d %d", ax, ay);
 	  }
 	else
 	  {
@@ -4303,7 +4303,7 @@
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: number of areas not given");
+	snprintf(buf, sizeof(buf), "Error: number of areas not given");
      }
 
    if (buf[0])
@@ -4320,7 +4320,7 @@
      {
 	if (!strcmp(params, "?"))
 	  {
-	     Esnprintf(buf, sizeof(buf), "Number of Desks: %d",
+	     snprintf(buf, sizeof(buf), "Number of Desks: %d",
 		       mode.numdesktops);
 	  }
 	else
@@ -4330,7 +4330,7 @@
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: number of desks not given");
+	snprintf(buf, sizeof(buf), "Error: number of desks not given");
      }
 
    if (buf[0])
@@ -4365,7 +4365,7 @@
 	  }
 	else if (!strcmp(params, "?"))
 	  {
-	     Esnprintf(buf, sizeof(buf), "Focus Mode: ");
+	     snprintf(buf, sizeof(buf), "Focus Mode: ");
 	     if (mode.focusmode == 2)
 	       {
 		  if (mode.click_focus_grabbed)
@@ -4392,12 +4392,12 @@
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: unknown focus type");
+	     snprintf(buf, sizeof(buf), "Error: unknown focus type");
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no focus type given");
+	snprintf(buf, sizeof(buf), "Error: no focus type given");
      }
 
    if (buf[0])
@@ -4417,7 +4417,7 @@
    buf[0] = 0;
    if (!params)
      {
-	Esnprintf(buf, sizeof(buf), "Error: no desktop selected");
+	snprintf(buf, sizeof(buf), "Error: no desktop selected");
      }
    else
      {
@@ -4431,7 +4431,7 @@
 	  }
 	else if (!strcmp(params, "?"))
 	  {
-	     Esnprintf(buf, sizeof(buf), "Current Desktop: %d", desks.current);
+	     snprintf(buf, sizeof(buf), "Current Desktop: %d", desks.current);
 	  }
 	else
 	  {
@@ -4491,7 +4491,7 @@
      {
 	if (!strcmp(params, "?"))
 	  {
-	     Esnprintf(buf, sizeof(buf), GetSMFile());
+	     snprintf(buf, sizeof(buf), GetSMFile());
 	  }
 	else
 	  {
@@ -4500,7 +4500,7 @@
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no file prefix specified");
+	snprintf(buf, sizeof(buf), "Error: no file prefix specified");
      }
 
    if (buf[0])
@@ -4539,13 +4539,13 @@
 
    if (params)
      {
-	Esnprintf(buf, sizeof(buf), "restart_wm %s", params);
+	snprintf(buf, sizeof(buf), "restart_wm %s", params);
 	params = NULL;
 	doExit(buf);
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no window manager specified");
+	snprintf(buf, sizeof(buf), "Error: no window manager specified");
 	CommsSend(c, buf);
      }
 }
@@ -4557,13 +4557,13 @@
 
    if (params)
      {
-	Esnprintf(buf, sizeof(buf), "restart_theme %s", params);
+	snprintf(buf, sizeof(buf), "restart_theme %s", params);
 	params = NULL;
 	doExit(buf);
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no theme specified");
+	snprintf(buf, sizeof(buf), "Error: no theme specified");
 	CommsSend(c, buf);
      }
 }
@@ -4591,7 +4591,7 @@
 
    if (!strcmp(params, "?"))
      {
-	Esnprintf(buf, sizeof(buf), "%s", GetDefaultTheme());
+	snprintf(buf, sizeof(buf), "%s", GetDefaultTheme());
      }
    else
      {
@@ -4600,13 +4600,13 @@
 	     char                restartcommand[FILEPATH_LEN_MAX];
 
 	     SetDefaultTheme(params);
-	     Esnprintf(restartcommand, sizeof(restartcommand),
+	     snprintf(restartcommand, sizeof(restartcommand),
 		       "restart_theme %s", params);
 	     doExit(restartcommand);
 	  }
 	else
 	  {
-	     Esnprintf(buf, sizeof(buf), "Could not find theme: %s",
+	     snprintf(buf, sizeof(buf), "Could not find theme: %s",
 		       GetDefaultTheme());
 	  }
      }
@@ -4622,7 +4622,7 @@
 
    buf[0] = 0;
 
-   Esnprintf(buf, sizeof(buf), themepath);
+   snprintf(buf, sizeof(buf), themepath);
 
    if (buf[0])
       CommsSend(c, buf);
@@ -4643,9 +4643,9 @@
    if (!strcmp(params, "?"))
      {
 	if (mode.autosave)
-	   Esnprintf(buf, sizeof(buf), "Autosave : on");
+	   snprintf(buf, sizeof(buf), "Autosave : on");
 	else
-	   Esnprintf(buf, sizeof(buf), "Autosave : off");
+	   snprintf(buf, sizeof(buf), "Autosave : off");
      }
    else if (!strcmp(params, "on"))
      {
@@ -4657,7 +4657,7 @@
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Unknown autosave state: %s", params);
+	snprintf(buf, sizeof(buf), "Unknown autosave state: %s", params);
      }
 
    if (buf[0])
@@ -4683,7 +4683,7 @@
    buf2[0] = 0;
    numIPC = sizeof(IPCArray) / sizeof(IPCStruct);
 
-   Esnprintf(buf, sizeof(buf), _("Enlightenment IPC Commands Help"));
+   snprintf(buf, sizeof(buf), _("Enlightenment IPC Commands Help"));
 
    if (!params)
      {
@@ -4771,7 +4771,7 @@
    char                buf[FILEPATH_LEN_MAX];
 
    params = NULL;
-   Esnprintf(buf, sizeof(buf),
+   snprintf(buf, sizeof(buf),
 	     "Copyright (C) 2000-2003 Carsten Haitzler and Geoff Harrison,\n"
 	     "with various contributors (Isaac Richards, Sung-Hyun Nam, "
 	     "Kimball Thurston,\n"
@@ -4826,7 +4826,7 @@
 
    buf[0] = 0;
 
-   Esnprintf(buf, sizeof(buf),
+   snprintf(buf, sizeof(buf),
 	     _("Enlightenment Version : %s\n" "code is current to    : %s\n"),
 	     ENLIGHTENMENT_VERSION, E_CHECKOUT_DATE);
 
@@ -4965,7 +4965,7 @@
 
 	if (!group)
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no such group: %d", index);
+	     snprintf(buf, sizeof(buf), "Error: no such group: %d", index);
 	     CommsSend(c, buf);
 	     return;
 	  }
@@ -4973,7 +4973,7 @@
 
 	if (!groups)
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no memory");
+	     snprintf(buf, sizeof(buf), "Error: no memory");
 	     CommsSend(c, buf);
 	     return;
 	  }
@@ -4984,20 +4984,20 @@
      {
 	groups = (Group **) ListItemType(&num_groups, LIST_TYPE_GROUP);
 
-	Esnprintf(buf, sizeof(buf), "Number of groups: %d", num_groups);
+	snprintf(buf, sizeof(buf), "Number of groups: %d", num_groups);
      }
 
    for (i = 0; i < num_groups; i++)
      {
 	for (j = 0; j < groups[i]->num_members; j++)
 	  {
-	     Esnprintf(tmp, sizeof(tmp), "%d", groups[i]->index);
+	     snprintf(tmp, sizeof(tmp), "%d", groups[i]->index);
 	     strcat(buf, tmp);
 	     strcat(buf, ": ");
 	     strcat(buf, groups[i]->members[j]->client.title);
 	     strcat(buf, "\n");
 	  }
-	Esnprintf(buf2, sizeof(buf2),
+	snprintf(buf2, sizeof(buf2),
 		  "        index: %d\n" "  num_members: %d\n"
 		  "      iconify: %d\n" "         kill: %d\n"
 		  "         move: %d\n" "        raise: %d\n"
@@ -5043,7 +5043,7 @@
 
 	if (!operation[0])
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	     snprintf(buf, sizeof(buf), "Error: no operation specified");
 	  }
 	else
 	  {
@@ -5052,7 +5052,7 @@
 	     ewin = FindEwinByChildren(win);
 	     if (!ewin)
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no such window: %8x",
+		  snprintf(buf, sizeof(buf), "Error: no such window: %8x",
 			    win);
 	       }
 	     else
@@ -5060,7 +5060,7 @@
 		  if (!strcmp(operation, "start"))
 		    {
 		       BuildWindowGroup(&ewin, 1);
-		       Esnprintf(buf, sizeof(buf), "start %8x", win);
+		       snprintf(buf, sizeof(buf), "start %8x", win);
 		    }
 		  else if (!strcmp(operation, "add"))
 		    {
@@ -5075,7 +5075,7 @@
 					LIST_TYPE_GROUP);
 			 }
 		       AddEwinToGroup(ewin, group);
-		       Esnprintf(buf, sizeof(buf), "add %8x", win);
+		       snprintf(buf, sizeof(buf), "add %8x", win);
 		    }
 		  else if (!strcmp(operation, "remove"))
 		    {
@@ -5090,7 +5090,7 @@
 					LIST_TYPE_GROUP);
 			 }
 		       RemoveEwinFromGroup(ewin, group);
-		       Esnprintf(buf, sizeof(buf), "remove %8x", win);
+		       snprintf(buf, sizeof(buf), "remove %8x", win);
 		    }
 		  else if (!strcmp(operation, "break"))
 		    {
@@ -5105,16 +5105,16 @@
 					LIST_TYPE_GROUP);
 			 }
 		       BreakWindowGroup(ewin, group);
-		       Esnprintf(buf, sizeof(buf), "break %8x", win);
+		       snprintf(buf, sizeof(buf), "break %8x", win);
 		    }
 		  else if (!strcmp(operation, "showhide"))
 		    {
 		       doShowHideGroup(windowid);
-		       Esnprintf(buf, sizeof(buf), "showhide %8x", win);
+		       snprintf(buf, sizeof(buf), "showhide %8x", win);
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf),
+		       snprintf(buf, sizeof(buf),
 				 "Error: no such operation: %s", operation);
 
 		    }
@@ -5123,7 +5123,7 @@
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no window specified");
+	snprintf(buf, sizeof(buf), "Error: no window specified");
      }
 
    if (buf)
@@ -5153,7 +5153,7 @@
 
 	if (!operation[0])
 	  {
-	     Esnprintf(buf, sizeof(buf), "Error: no operation specified");
+	     snprintf(buf, sizeof(buf), "Error: no operation specified");
 	  }
 	else
 	  {
@@ -5164,7 +5164,7 @@
 
 	     if (!group)
 	       {
-		  Esnprintf(buf, sizeof(buf), "Error: no such group: %d",
+		  snprintf(buf, sizeof(buf), "Error: no such group: %d",
 			    index);
 	       }
 	     else
@@ -5179,12 +5179,12 @@
 
 		       if (onoff == -1 && strcmp(param1, "?"))
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "Error: unknown mode specified");
 			 }
 		       else if (!strcmp(operation, "num_members"))
 			 {
-			    Esnprintf(buf, sizeof(buf), "num_members: %d",
+			    snprintf(buf, sizeof(buf), "num_members: %d",
 				      group->num_members);
 			    onoff = -1;
 			 }
@@ -5246,7 +5246,7 @@
 			 }
 		       else
 			 {
-			    Esnprintf(buf, sizeof(buf),
+			    snprintf(buf, sizeof(buf),
 				      "Error: no such operation: %s",
 				      operation);
 			    onoff = -1;
@@ -5254,19 +5254,19 @@
 		    }
 		  else
 		    {
-		       Esnprintf(buf, sizeof(buf), "Error: no mode specified");
+		       snprintf(buf, sizeof(buf), "Error: no mode specified");
 		    }
 	       }
 
 	     if (onoff == 1)
-		Esnprintf(buf, sizeof(buf), "%s: on", operation);
+		snprintf(buf, sizeof(buf), "%s: on", operation);
 	     else if (onoff == 0)
-		Esnprintf(buf, sizeof(buf), "%s: off", operation);
+		snprintf(buf, sizeof(buf), "%s: off", operation);
 	  }
      }
    else
      {
-	Esnprintf(buf, sizeof(buf), "Error: no group specified");
+	snprintf(buf, sizeof(buf), "Error: no group specified");
      }
 
    if (buf)
@@ -5309,7 +5309,7 @@
    lst = (Snapshot **) ListItemType(&num, LIST_TYPE_SNAPSHOT);
    if (!num)
      {
-	Esnprintf(buf, sizeof(buf), "Error: no remembered windows\n");
+	snprintf(buf, sizeof(buf), "Error: no remembered windows\n");
      }
    else
      {
@@ -5320,7 +5320,7 @@
 		  if (!lst[i] || (lst[i] && !lst[i]->used))
 		     j++;
 	       }
-	     Esnprintf(buf, sizeof(buf), "Number of remembered windows: %d\n",
+	     snprintf(buf, sizeof(buf), "Number of remembered windows: %d\n",
 		       num - j);
 	  }
 	/* strncat(buf, buf2, sizeof(buf)); */
@@ -5330,12 +5330,12 @@
 	       {
 		  if (!f)
 		    {
-		       Esnprintf(buf2, sizeof(buf2), "%s\n",
+		       snprintf(buf2, sizeof(buf2), "%s\n",
 				 lst[i]->name ? lst[i]->name : nstr);
 		    }
 		  else
 		    {
-		       Esnprintf(buf2, sizeof(buf2),
+		       snprintf(buf2, sizeof(buf2),
 				 "             Name: %s\n"
 				 "     Window Title: %s\n"
 				 "      Window Name: %s\n"
diff -ur enlightenment-0.16.6.orig/src/kde.c enlightenment-0.16.6/src/kde.c
--- enlightenment-0.16.6.orig/src/kde.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/kde.c	Wed Nov 12 17:23:52 2003
@@ -1081,12 +1081,12 @@
 
 	if (!KDE_DESKTOP_NAME[i])
 	  {
-	     Esnprintf(s, sizeof(s), "KWM_DESKTOP_NAME_%d", i + 1);
+	     snprintf(s, sizeof(s), "KWM_DESKTOP_NAME_%d", i + 1);
 	     KDE_DESKTOP_NAME[i] = XInternAtom(disp, s, False);
 	  }
 	if (!getSimpleHint(root.win, KDE_DESKTOP_NAME[i]))
 	  {
-	     Esnprintf(s, sizeof(s), "Desk %d", i);
+	     snprintf(s, sizeof(s), "Desk %d", i);
 	     XChangeProperty(disp, root.win, KDE_DESKTOP_NAME[i], XA_STRING, 8,
 			     PropModeReplace, (unsigned char *)s,
 			     strlen(s) + 1);
@@ -1122,7 +1122,7 @@
 
 	     if (!KDE_DESKTOP_WINDOW_REGION[i])
 	       {
-		  Esnprintf(s, sizeof(s), "KWM_WINDOW_REGION_%d", i + 1);
+		  snprintf(s, sizeof(s), "KWM_WINDOW_REGION_%d", i + 1);
 		  KDE_DESKTOP_WINDOW_REGION[i] = XInternAtom(disp, s, False);
 	       }
 	     if (a == KDE_DESKTOP_WINDOW_REGION[i])
@@ -1149,7 +1149,7 @@
 			 }
 		       if (i == 1)
 			 {
-			    /* Esnprintf(s, sizeof(s), "region %d changed to area:\n"
+			    /* snprintf(s, sizeof(s), "region %d changed to area:\n"
 			     * "X %d to %d\nY to %d to %d\n", i + 1, data[0], data[2],
 			     * data[1], data[3]);
 			     * DIALOG_OK("kde hint",s); */
diff -ur enlightenment-0.16.6.orig/src/main.c enlightenment-0.16.6/src/main.c
--- enlightenment-0.16.6.orig/src/main.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/main.c	Wed Nov 12 17:23:52 2003
@@ -33,7 +33,7 @@
    if (fork())
       EDBUG_RETURN_;
 
-   Esnprintf(file, sizeof(file), "exec %s/dox %s/E-docs", ENLIGHTENMENT_BIN,
+   snprintf(file, sizeof(file), "exec %s/dox %s/E-docs", ENLIGHTENMENT_BIN,
 	     ENLIGHTENMENT_ROOT);
    execl(usershell(getuid()), usershell(getuid()), "-c", (char *)file, NULL);
    exit(0);
@@ -113,7 +113,7 @@
 	{
 	   if ((!strcmp("-theme", argv[j])) && (argc - j > 1))
 	     {
-		Esnprintf(themepath, sizeof(themepath), "%s", argv[++j]);
+		snprintf(themepath, sizeof(themepath), "%s", argv[++j]);
 	     }
 	   else if ((!strcmp("-econfdir", argv[j])) && (argc - j > 1))
 	     {
@@ -208,7 +208,7 @@
 		     s[0] = 0;
 		  fclose(f);
 		  if (s[0])
-		     Esnprintf(themepath, sizeof(themepath), "%s", s);
+		     snprintf(themepath, sizeof(themepath), "%s", s);
 	       }
 	     Efree(file);
 	  }
@@ -220,7 +220,7 @@
 	     def = GetDefaultTheme();
 	     if (def)
 	       {
-		  Esnprintf(themepath, sizeof(themepath), "%s", def);
+		  snprintf(themepath, sizeof(themepath), "%s", def);
 		  Efree(def);
 	       }
 	  }
diff -ur enlightenment-0.16.6.orig/src/menus.c enlightenment-0.16.6/src/menus.c
--- enlightenment-0.16.6.orig/src/menus.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/menus.c	Wed Nov 12 17:23:52 2003
@@ -562,7 +562,7 @@
    if (m->win)
       EDestroyWindow(disp, m->win);
 
-   Esnprintf(s, sizeof(s), "__.%s", m->name);
+   snprintf(s, sizeof(s), "__.%s", m->name);
    RemoveTimerEvent(s);
    RemoveItem((char *)m, m->win, LIST_FINDBY_POINTER, LIST_TYPE_MENU);
    if (m->name)
@@ -1060,7 +1060,7 @@
 	   cc = st.st_mtime;
 	else
 	   cc = st.st_ctime;
-	Esnprintf(cs, sizeof(cs),
+	snprintf(cs, sizeof(cs),
 		  "%s/cached/img/.%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c",
 		  UserCacheDir(), chmap[(aa >> 0) & 0x3f],
 		  chmap[(aa >> 6) & 0x3f], chmap[(aa >> 12) & 0x3f],
@@ -1098,7 +1098,7 @@
 			    ImlibImage         *im;
 
 			    word(s, 2, s2);
-			    Esnprintf(ss, sizeof(ss), "%s/%s", dir, s2);
+			    snprintf(ss, sizeof(ss), "%s/%s", dir, s2);
 			    im = Imlib_load_image(pImlibData, ss);
 			    if (im)
 			      {
@@ -1112,7 +1112,7 @@
 				 int                 maxw = 48, maxh = 48;
 				 int                 justx = 512, justy = 512;
 
-				 Esnprintf(s2, sizeof(s2), "%s/cached/img/%s",
+				 snprintf(s2, sizeof(s2), "%s/cached/img/%s",
 					   UserCacheDir(), s3);
 				 width = im->rgb_width;
 				 height = im->rgb_height;
@@ -1200,7 +1200,7 @@
 			    ic = CreateIclass();
 			    ic->name = duplicate("`");
 			    ic->norm.normal = CreateImageState();
-			    Esnprintf(stmp, sizeof(stmp), "%s/cached/img/%s",
+			    snprintf(stmp, sizeof(stmp), "%s/cached/img/%s",
 				      UserCacheDir(), s3);
 			    ic->norm.normal->im_file = duplicate(stmp);
 			    ic->norm.normal->unloadable = 1;
@@ -1214,7 +1214,7 @@
 		  else if (!strcmp(ss, "EXE"))
 		    {
 		       word(s, 2, ss);
-		       Esnprintf(s, sizeof(s), "%s/%s", dir, ss);
+		       snprintf(s, sizeof(s), "%s/%s", dir, ss);
 		       mi = CreateMenuItem(NULL, NULL, ACTION_EXEC, s, NULL);
 		       AddItemToMenu(m, mi);
 		    }
@@ -1223,8 +1223,8 @@
 		       char                tmp[4096];
 
 		       word(s, 2, tmp);
-		       Esnprintf(s, sizeof(s), "%s/%s:%s", dir, tmp, name);
-		       Esnprintf(ss, sizeof(ss), "%s/%s", dir, tmp);
+		       snprintf(s, sizeof(s), "%s/%s:%s", dir, tmp, name);
+		       snprintf(ss, sizeof(ss), "%s/%s", dir, tmp);
 		       mm = CreateMenuFromDirectory(s, ms, ss);
 		       mm->parent = m;
 		       AddItem(mm, mm->name, mm->win, LIST_TYPE_MENU);
@@ -1237,7 +1237,7 @@
 	  }
      }
    list = ls(dir, &num);
-   Esnprintf(s, sizeof(s), "Scanning %s", dir);
+   snprintf(s, sizeof(s), "Scanning %s", dir);
    if (!init_win_ext)
       p = CreateProgressbar(s, 600, 16);
    if (p)
@@ -1247,15 +1247,15 @@
      {
 	if (p)
 	   SetProgressbar(p, (i * 100) / num);
-	Esnprintf(ss, sizeof(ss), "%s/%s", dir, list[i]);
+	snprintf(ss, sizeof(ss), "%s/%s", dir, list[i]);
 	/* skip "dot" files and dirs - senisble */
 	if ((*(list[i]) != '.') && (stat(ss, &st) >= 0))
 	  {
 	     ext = FileExtension(ss);
 	     if (S_ISDIR(st.st_mode))
 	       {
-		  Esnprintf(s, sizeof(s), "%s/%s:%s", dir, list[i], name);
-		  Esnprintf(ss, sizeof(ss), "%s/%s", dir, list[i]);
+		  snprintf(s, sizeof(s), "%s/%s:%s", dir, list[i], name);
+		  snprintf(ss, sizeof(ss), "%s/%s", dir, list[i]);
 		  mm = CreateMenuFromDirectory(s, ms, ss);
 		  mm->parent = m;
 		  AddItem(mm, mm->name, mm->win, LIST_TYPE_MENU);
@@ -1308,7 +1308,7 @@
 		     cc = st.st_mtime;
 		  else
 		     cc = st.st_ctime;
-		  Esnprintf(s3, sizeof(s3),
+		  snprintf(s3, sizeof(s3),
 			    ".%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c",
 			    chmap[(aa >> 0) & 0x3f], chmap[(aa >> 6) & 0x3f],
 			    chmap[(aa >> 12) & 0x3f], chmap[(aa >> 18) & 0x3f],
@@ -1336,7 +1336,7 @@
 			    int                 scr_asp, im_asp, w2, h2;
 			    int                 maxw = 48, maxh = 48;
 
-			    Esnprintf(s2, sizeof(s2), "%s/cached/img/%s",
+			    snprintf(s2, sizeof(s2), "%s/cached/img/%s",
 				      UserCacheDir(), s3);
 			    width = im->rgb_width;
 			    height = im->rgb_height;
@@ -1411,7 +1411,7 @@
 		       ic = CreateIclass();
 		       ic->name = duplicate("`");
 		       ic->norm.normal = CreateImageState();
-		       Esnprintf(stmp, sizeof(stmp), "%s/cached/img/%s",
+		       snprintf(stmp, sizeof(stmp), "%s/cached/img/%s",
 				 UserCacheDir(), s3);
 		       ic->norm.normal->im_file = duplicate(stmp);
 		       ic->norm.normal->unloadable = 1;
@@ -1464,7 +1464,7 @@
 	   FillFlatFileMenu(m, m->style, m->name, ff, m);
 	m->data = ff;
 	m->ref_menu = parent;
-	Esnprintf(s, sizeof(s), "__.%s", m->name);
+	snprintf(s, sizeof(s), "__.%s", m->name);
 	DoIn(s, 2.0, FileMenuUpdate, 0, m);
 	calls--;
 	EDBUG_RETURN(m);
@@ -1528,7 +1528,7 @@
 		  tmp = NULL;
 		  if (icon)
 		    {
-		       Esnprintf(wd, sizeof(wd), "__FM.%s", icon);
+		       snprintf(wd, sizeof(wd), "__FM.%s", icon);
 		       icc =
 			  FindItem(wd, 0, LIST_FINDBY_NAME, LIST_TYPE_ICLASS);
 		       if (!icc)
@@ -1560,7 +1560,7 @@
 		    }
 		  else if ((act) && (!strcmp(act, "menu")) && (params))
 		    {
-		       Esnprintf(wd, sizeof(wd), "__FM.%s.%i", name, count);
+		       snprintf(wd, sizeof(wd), "__FM.%s.%i", name, count);
 		       count++;
 		       mm = CreateMenuFromFlatFile(wd, ms, params, parent);
 		       if (mm)
@@ -1603,7 +1603,7 @@
    /* if the menu is up dont update */
    if (((mode.cur_menu_mode) || (clickmenu)) && (mode.cur_menu_depth > 0))
      {
-	Esnprintf(s, sizeof(s), "__.%s", m->name);
+	snprintf(s, sizeof(s), "__.%s", m->name);
 	DoIn(s, 2.0, FileMenuUpdate, 0, m);
 	return;
      }
@@ -1623,7 +1623,7 @@
 	m->last_change = lastmod;
 	if (m == mm)
 	  {
-	     Esnprintf(s, sizeof(s), "__.%s", m->name);
+	     snprintf(s, sizeof(s), "__.%s", m->name);
 	     DoIn(s, 2.0, FileMenuUpdate, 0, m);
 	  }
 	EmptyMenu(mm);
@@ -1631,7 +1631,7 @@
 	RepackMenu(mm);
 	return;
      }
-   Esnprintf(s, sizeof(s), "__.%s", m->name);
+   snprintf(s, sizeof(s), "__.%s", m->name);
    DoIn(s, 2.0, FileMenuUpdate, 0, m);
    val = 0;
 }
@@ -1650,7 +1650,7 @@
    EDBUG(5, "CreateMenuFromGnome");
 
    if ((lang = setlocale(LC_MESSAGES, NULL)) != NULL)
-      Esnprintf(name_buf, sizeof(name_buf), "Name[%s]=", lang);
+      snprintf(name_buf, sizeof(name_buf), "Name[%s]=", lang);
    else
       name_buf[0] = '\0';
 
@@ -1662,17 +1662,17 @@
      {
 	if ((strcmp(list[i], ".")) && (strcmp(list[i], "..")))
 	  {
-	     Esnprintf(ss, sizeof(ss), "%s/%s", dir, list[i]);
+	     snprintf(ss, sizeof(ss), "%s/%s", dir, list[i]);
 	     if (isdir(ss))
 	       {
-		  Esnprintf(s, sizeof(s), "%s/%s:%s", dir, list[i], name);
+		  snprintf(s, sizeof(s), "%s/%s:%s", dir, list[i], name);
 		  mm = CreateMenuFromGnome(s, ms, ss);
 		  mm->parent = m;
 		  AddItem(mm, mm->name, mm->win, LIST_TYPE_MENU);
 		  name = list[i];
 		  if (name_buf[0])
 		    {
-		       Esnprintf(s, sizeof(s), "%s/.directory", ss);
+		       snprintf(s, sizeof(s), "%s/.directory", ss);
 		       if ((f = fopen(s, "r")) != NULL)
 			 {
 			    while (fgets(s, sizeof(s), f))
@@ -1781,7 +1781,7 @@
 	for (i = 0; i < num; i++)
 	  {
 	     s = fullfileof(lst[i]);
-	     Esnprintf(ss, sizeof(ss), "restart_theme %s", s);
+	     snprintf(ss, sizeof(ss), "restart_theme %s", s);
 	     Efree(s);
 	     s = fileof(lst[i]);
 	     mi = CreateMenuItem(s, NULL, ACTION_EXIT, ss, NULL);
@@ -1858,7 +1858,7 @@
 	     if ((!lst[i]->menu) && (!lst[i]->pager) && (!lst[i]->skipwinlist)
 		 && (lst[i]->client.title) && (!lst[i]->ibox))
 	       {
-		  Esnprintf(s, sizeof(s), "%i", (int)(lst[i]->client.win));
+		  snprintf(s, sizeof(s), "%i", (int)(lst[i]->client.win));
 		  mi = CreateMenuItem(lst[i]->client.title, NULL,
 				      ACTION_FOCUS_SET, s, NULL);
 		  AddItemToMenu(m, mi);
@@ -1894,7 +1894,7 @@
 		 && (!lst[i]->skipwinlist) && (lst[i]->client.title)
 		 && (!lst[i]->ibox))
 	       {
-		  Esnprintf(s, sizeof(s), "%i", (int)(lst[i]->client.win));
+		  snprintf(s, sizeof(s), "%i", (int)(lst[i]->client.win));
 		  mi = CreateMenuItem(lst[i]->client.title, NULL,
 				      ACTION_FOCUS_SET, s, NULL);
 		  AddItemToMenu(m, mi);
@@ -1926,7 +1926,7 @@
 	mm = CreateMenu();
 	mm->name = duplicate("__SUBMENUDESK_E");
 	mm->style = ms;
-	Esnprintf(s, sizeof(s), "%i", j);
+	snprintf(s, sizeof(s), "%i", j);
 	mi = CreateMenuItem(_("Go to this Desktop"), NULL, ACTION_GOTO_DESK, s,
 			    NULL);
 	AddItemToMenu(mm, mi);
@@ -1936,14 +1936,14 @@
 		 && (!lst[i]->pager) && (!lst[i]->skipwinlist)
 		 && (lst[i]->client.title) && (!lst[i]->ibox))
 	       {
-		  Esnprintf(s, sizeof(s), "%i", (int)(lst[i]->client.win));
+		  snprintf(s, sizeof(s), "%i", (int)(lst[i]->client.win));
 		  mi = CreateMenuItem(lst[i]->client.title, NULL,
 				      ACTION_FOCUS_SET, s, NULL);
 		  AddItemToMenu(mm, mi);
 	       }
 	  }
 	mm->parent = m;
-	Esnprintf(s, sizeof(s), _("Desktop %i"), j);
+	snprintf(s, sizeof(s), _("Desktop %i"), j);
 	mi = CreateMenuItem(s, NULL, 0, NULL, mm);
 	AddItemToMenu(m, mi);
      }
@@ -2009,7 +2009,7 @@
 	     mm = CreateMenu();
 	     mm->name = duplicate("__SUBMENUGROUP_E");
 	     mm->style = ms;
-	     Esnprintf(s, sizeof(s), "%i", lst[i]->members[0]->client.win);
+	     snprintf(s, sizeof(s), "%i", lst[i]->members[0]->client.win);
 	     mi = CreateMenuItem(_("Show/Hide this group"), NULL,
 				 ACTION_SHOW_HIDE_GROUP, s, NULL);
 	     AddItemToMenu(mm, mi);
@@ -2019,13 +2019,13 @@
 
 	     for (j = 0; j < lst[i]->num_members; j++)
 	       {
-		  Esnprintf(s, sizeof(s), "%i", lst[i]->members[j]->client.win);
+		  snprintf(s, sizeof(s), "%i", lst[i]->members[j]->client.win);
 		  mi = CreateMenuItem(lst[i]->members[j]->client.title, NULL,
 				      ACTION_FOCUS_SET, s, NULL);
 		  AddItemToMenu(mm, mi);
 	       }
 	     mm->parent = m;
-	     Esnprintf(s, sizeof(s), _("Group %i"), i);
+	     snprintf(s, sizeof(s), _("Group %i"), i);
 	     mi = CreateMenuItem(s, NULL, 0, NULL, mm);
 	     AddItemToMenu(m, mi);
 	  }
diff -ur enlightenment-0.16.6.orig/src/misc.c enlightenment-0.16.6/src/misc.c
--- enlightenment-0.16.6.orig/src/misc.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/misc.c	Wed Nov 12 17:23:52 2003
@@ -51,9 +51,9 @@
    for (i = 0; i < 3; i++)
      {
 #ifndef __EMX__
-	Esnprintf(s, sizeof(s), "%s/%s", ENLIGHTENMENT_BIN, bins[i]);
+	snprintf(s, sizeof(s), "%s/%s", ENLIGHTENMENT_BIN, bins[i]);
 #else
-	Esnprintf(s, sizeof(s), "%s/%s", __XOS2RedirRoot(ENLIGHTENMENT_BIN),
+	snprintf(s, sizeof(s), "%s/%s", __XOS2RedirRoot(ENLIGHTENMENT_BIN),
 		  bins[i]);
 #endif
 	if (!exists(s))
@@ -81,14 +81,14 @@
 		    "correctly.\n"), s);
 	     EExit(NULL);
 	  }
-	Esnprintf(s, sizeof(s), "%s/dox", ENLIGHTENMENT_BIN);
+	snprintf(s, sizeof(s), "%s/dox", ENLIGHTENMENT_BIN);
      }
    for (i = 0; i < 3; i++)
      {
 #ifndef __EMX__
-	Esnprintf(s, sizeof(s), "%s/%s", ENLIGHTENMENT_ROOT, docs[i]);
+	snprintf(s, sizeof(s), "%s/%s", ENLIGHTENMENT_ROOT, docs[i]);
 #else
-	Esnprintf(s, sizeof(s), "%s/%s", __XOS2RedirRoot(ENLIGHTENMENT_ROOT),
+	snprintf(s, sizeof(s), "%s/%s", __XOS2RedirRoot(ENLIGHTENMENT_ROOT),
 		  docs[i]);
 #endif
 	if (!exists(s))
@@ -109,9 +109,9 @@
    for (i = 0; i < 1; i++)
      {
 #ifndef __EMX__
-	Esnprintf(s, sizeof(s), "%s/%s", ENLIGHTENMENT_ROOT, thms[i]);
+	snprintf(s, sizeof(s), "%s/%s", ENLIGHTENMENT_ROOT, thms[i]);
 #else
-	Esnprintf(s, sizeof(s), "%s/%s", __XOS2RedirRoot(ENLIGHTENMENT_ROOT),
+	snprintf(s, sizeof(s), "%s/%s", __XOS2RedirRoot(ENLIGHTENMENT_ROOT),
 		  thms[i]);
 #endif
 	if (!exists(s))
@@ -146,7 +146,7 @@
       char               *home, buf[4096];
 
       home = homedir(getuid());
-      Esnprintf(buf, sizeof(buf), "%s/.enlightenment", home);
+      snprintf(buf, sizeof(buf), "%s/.enlightenment", home);
       Efree(home);
       dir = duplicate(buf);
    }
@@ -207,9 +207,9 @@
 	     char                sss[FILEPATH_LEN_MAX];
 
 #ifndef __EMX__
-	     Esnprintf(sss, sizeof(sss), "/bin/rm -rf %s", themepath);
+	     snprintf(sss, sizeof(sss), "/bin/rm -rf %s", themepath);
 #else
-	     Esnprintf(sss, sizeof(sss), "rm.exe -rf %s", themepath);
+	     snprintf(sss, sizeof(sss), "rm.exe -rf %s", themepath);
 #endif
 	     system(sss);
 	  }
@@ -420,93 +420,93 @@
    char                s[4096];
 
    return 1;
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "borders.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "borders.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a borders.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "buttons.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "buttons.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a buttons.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "colormodifiers.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "colormodifiers.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a colormodifiers.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "cursors.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "cursors.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a cursors.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "desktops.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "desktops.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a desktops.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "imageclasses.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "imageclasses.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a imageclasses.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "init.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "init.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a init.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "menustyles.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "menustyles.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a menustyles.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "slideouts.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "slideouts.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a slideouts.cfg file\n");
 	return 0;
      }
 #ifndef __EMX__			/* OS/2 Team will compile ESound after XMMS project */
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "sound.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "sound.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a sound.cfg file\n");
 	return 0;
      }
 #endif
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "tooltips.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "tooltips.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a tooltips.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "windowmatches.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "windowmatches.cfg");
    if (!isfile(s))
      {
 	badreason = _("Theme does not contain a windowmatches.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "menus.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "menus.cfg");
    if (isfile(s))
      {
 	badreason = _("Theme contains a menus.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "control.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "control.cfg");
    if (isfile(s))
      {
 	badreason = _("Theme contains a control.cfg file\n");
 	return 0;
      }
-   Esnprintf(s, sizeof(s), "%s/%s", dir, "keybindings.cfg");
+   snprintf(s, sizeof(s), "%s/%s", dir, "keybindings.cfg");
    if (isfile(s))
      {
 	badreason = _("Theme contains a keybindings.cfg file\n");
diff -ur enlightenment-0.16.6.orig/src/modules.c enlightenment-0.16.6/src/modules.c
--- enlightenment-0.16.6.orig/src/modules.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/modules.c	Wed Nov 12 17:23:52 2003
@@ -69,7 +69,7 @@
 
       char                pathoffiletoload[FILEPATH_LEN_MAX];
 
-      Esnprintf(pathoffiletoload, sizeof(pathoffiletoload), "%s/%s",
+      snprintf(pathoffiletoload, sizeof(pathoffiletoload), "%s/%s",
 		FindModulePath(module_name), module_name);
       handle = dlopen(pathoffiletoload, RTLD_LAZY);
 
diff -ur enlightenment-0.16.6.orig/src/pager.c enlightenment-0.16.6/src/pager.c
--- enlightenment-0.16.6.orig/src/pager.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/pager.c	Wed Nov 12 17:23:52 2003
@@ -455,7 +455,7 @@
    static int          offsets[8] = { 0, 4, 2, 6, 1, 5, 3, 7 };
 
    p = (Pager *) data;
-   Esnprintf(s, sizeof(s), "__.%x", p->win);
+   snprintf(s, sizeof(s), "__.%x", p->win);
    /* prevent runaway pager timeouts - dont knwo how it happens - but hack */
    /* around to stop it */
    cur_time = GetTime();
@@ -672,7 +672,7 @@
 	ShowEwin(p->ewin);
 	return;
      }
-   Esnprintf(s, sizeof(s), "%i", p->desktop);
+   snprintf(s, sizeof(s), "%i", p->desktop);
    xch = XAllocClassHint();
    xch->res_name = s;
    xch->res_class = "Enlightenment_Pager";
@@ -732,7 +732,7 @@
 	RememberImportantInfoForEwin(ewin);
 	if (SNAP)
 	  {
-	     Esnprintf(s, sizeof(s), "__.%x", p->win);
+	     snprintf(s, sizeof(s), "__.%x", p->win);
 	     if (mode.pager_scanspeed > 0)
 		DoIn(s, 1 / ((double)mode.pager_scanspeed), PagerUpdateTimeout,
 		     0, p);
@@ -749,7 +749,7 @@
    char                s[4096];
 
    RemoveItem("PAGER", p->win, LIST_FINDBY_ID, LIST_TYPE_PAGER);
-   Esnprintf(s, sizeof(s), "__.%x", p->win);
+   snprintf(s, sizeof(s), "__.%x", p->win);
    RemoveTimerEvent(s);
    if (p->name)
       Efree(p->name);
@@ -1010,7 +1010,7 @@
 		       ImlibImage         *im;
 
 		       uniq = GetUniqueBGString(desks.desk[p->desktop].bg);
-		       Esnprintf(s, sizeof(s), "%s/cached/pager/%s.%i.%i.%s",
+		       snprintf(s, sizeof(s), "%s/cached/pager/%s.%i.%i.%s",
 				 UserCacheDir(),
 				 desks.desk[p->desktop].bg->name, (p->w / ax),
 				 (p->h / ay), uniq);
@@ -1276,7 +1276,7 @@
 	pw_menu->style =
 	   FindItem("DEFAULT", 0, LIST_FINDBY_NAME, LIST_TYPE_MENU_STYLE);
 
-	Esnprintf(s, sizeof(s), "%i", ewin->client.win);
+	snprintf(s, sizeof(s), "%i", ewin->client.win);
 	mi = CreateMenuItem(_("Iconify"), NULL, ACTION_ICONIFY, s, NULL);
 	AddItemToMenu(pw_menu, mi);
 
@@ -1290,7 +1290,7 @@
 	AddItemToMenu(pw_menu, mi);
 
 	AddItem(pw_menu, pw_menu->name, 0, LIST_TYPE_MENU);
-	Esnprintf(s, sizeof(s), "named %s", pw_menu->name);
+	snprintf(s, sizeof(s), "named %s", pw_menu->name);
 	spawnMenu(s);
 	return;
      }
@@ -1326,7 +1326,7 @@
 	AddItemToMenu(p_menu, mi);
      }
    AddItem(p_menu, p_menu->name, 0, LIST_TYPE_MENU);
-   Esnprintf(s, sizeof(s), "named %s", p_menu->name);
+   snprintf(s, sizeof(s), "named %s", p_menu->name);
    spawnMenu(s);
 }
 
@@ -1718,7 +1718,7 @@
    if (p)
      {
 	p->desktop = desk;
-	Esnprintf(s, sizeof(s), "%i", desk);
+	snprintf(s, sizeof(s), "%i", desk);
 	PagerTitle(p, s);
 	PagerShow(p);
      }
@@ -1739,7 +1739,7 @@
 	if (p)
 	  {
 	     p->desktop = desk;
-	     Esnprintf(s, sizeof(s), "%i", desk);
+	     snprintf(s, sizeof(s), "%i", desk);
 	     PagerTitle(p, s);
 	     PagerShow(p);
 	  }
@@ -1870,7 +1870,7 @@
 	     PagerForceUpdate(pl[i]);
 	     if (SNAP)
 	       {
-		  Esnprintf(s, sizeof(s), "__.%x", pl[i]->win);
+		  snprintf(s, sizeof(s), "__.%x", pl[i]->win);
 		  if (mode.pager_scanspeed > 0)
 		     DoIn(s, 1 / ((double)mode.pager_scanspeed),
 			  PagerUpdateTimeout, 0, pl[i]);
diff -ur enlightenment-0.16.6.orig/src/progress.c enlightenment-0.16.6/src/progress.c
--- enlightenment-0.16.6.orig/src/progress.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/progress.c	Wed Nov 12 17:23:52 2003
@@ -92,7 +92,7 @@
       w = 1;
    if (w > p->w)
       w = p->w;
-   Esnprintf(s, sizeof(s), "%i%%", p->value);
+   snprintf(s, sizeof(s), "%i%%", p->value);
    pq = queue_up;
    queue_up = 0;
    TclassApply(p->inc, p->n_win, p->h * 5, p->h, 0, 0, STATE_CLICKED, 0,
diff -ur enlightenment-0.16.6.orig/src/session.c enlightenment-0.16.6/src/session.c
--- enlightenment-0.16.6.orig/src/session.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/session.c	Wed Nov 12 17:23:52 2003
@@ -127,7 +127,7 @@
      {
 	char                s[1024];
 
-	Esnprintf(s, sizeof(s), "%s/...e_session-XXXXXX", UserEDir());
+	snprintf(s, sizeof(s), "%s/...e_session-XXXXXX", UserEDir());
 	def_prefix = duplicate(s);
      }
    return def_prefix;
@@ -236,7 +236,7 @@
 		    }
 	       }
 	     fclose(f);
-	     Esnprintf(ss, sizeof(ss), "%s.clients.%i", GetSMFile(), root.scr);
+	     snprintf(ss, sizeof(ss), "%s.clients.%i", GetSMFile(), root.scr);
 	     mv(s, ss);
 	     if (!isfile(ss))
 		Alert(_
@@ -256,7 +256,7 @@
    FILE               *f;
    char                s[4096], s1[4096];
 
-   Esnprintf(s, sizeof(s), "%s.clients.%i", GetSMFile(), root.scr);
+   snprintf(s, sizeof(s), "%s.clients.%i", GetSMFile(), root.scr);
 #ifndef __EMX__
    f = fopen(s, "r");
 #else
@@ -443,7 +443,7 @@
      {
 /*      char                buf[1024];
  *
- *      Esnprintf(buf, sizeof(buf) / sizeof(char), "rm %s*", GetSMFile());
+ *      snprintf(buf, sizeof(buf) / sizeof(char), "rm %s*", GetSMFile());
  *      system(buf); */
 
 	rm(GetGenericSMFile());
@@ -532,9 +532,9 @@
 	if (mustdel)
 	  {
 #ifndef __EMX__
-	     Esnprintf(sss, sizeof(sss), "/bin/rm -rf %s", themepath);
+	     snprintf(sss, sizeof(sss), "/bin/rm -rf %s", themepath);
 #else
-	     Esnprintf(sss, sizeof(sss), "rm.exe -rf %s", themepath);
+	     snprintf(sss, sizeof(sss), "rm.exe -rf %s", themepath);
 #endif
 	     system(sss);
 	  }
@@ -549,7 +549,7 @@
 
 	     if (themepath[0] != 0)
 	       {
-		  Esnprintf(sss, sizeof(sss),
+		  snprintf(sss, sizeof(sss),
 			    "exec %s -single -ext_init_win %i -theme %s "
 			    "-econfdir %s -ecachedir %s -display %s", command,
 			    w, themename, UserEDir(), UserCacheDir(), dstr);
@@ -557,7 +557,7 @@
 	       }
 	     else
 	       {
-		  Esnprintf(sss, sizeof(sss),
+		  snprintf(sss, sizeof(sss),
 			    "exec %s -single -ext_init_win %i "
 			    "-econfdir %s -ecachedir %s -display %s", command,
 			    w, UserEDir(), UserCacheDir(), dstr);
@@ -573,7 +573,7 @@
 	     XCloseDisplay(disp);
 	     disp = NULL;
 	     sscanf(params, "%*s %1000s", s);
-	     Esnprintf(sss, sizeof(sss),
+	     snprintf(sss, sizeof(sss),
 		       "exec %s -single -ext_init_win %i -theme %s "
 		       "-econfdir %s -ecachedir %s -display %s", command, w, s,
 		       UserEDir(), UserCacheDir(), dstr);
@@ -768,7 +768,7 @@
 
 #if USE_DISCARD_PROPERTY
    /* Tell session manager how to clean up our old data */
-   Esnprintf(buf, sizeof(buf) / sizeof(char), "rm %s*.clients.*", sm_file);
+   snprintf(buf, sizeof(buf) / sizeof(char), "rm %s*.clients.*", sm_file);
 
    discardVal[0].length = strlen(sh);
    discardVal[0].value = sh;
@@ -788,7 +788,7 @@
      }
    if (restarting)
      {
-	Esnprintf(buf, sizeof(buf) / sizeof(char), "%i", init_win_ext);
+	snprintf(buf, sizeof(buf) / sizeof(char), "%i", init_win_ext);
 
 	restartVal[n].length = strlen(extinitwin);
 	restartVal[n++].value = extinitwin;
@@ -881,7 +881,7 @@
 
 /*      int                 fd; */
 
-	Esnprintf(s, sizeof(s), "sm_file %s", default_save_prefix());
+	snprintf(s, sizeof(s), "sm_file %s", default_save_prefix());
 /*      fd = Emkstemp(s + 8);
  * if (fd < 0)
  * {
@@ -1196,7 +1196,7 @@
 #endif
 	XCloseDisplay(disp);
 	disp = NULL;
-	Esnprintf(s, sizeof(s), "exec %s -display %s", atword(params, 2), dstr);
+	snprintf(s, sizeof(s), "exec %s -display %s", atword(params, 2), dstr);
 	execl(DEFAULT_SH_PATH, DEFAULT_SH_PATH, "-c", s, NULL);
      }
    else if (!strcmp(s, "restart"))
@@ -1213,14 +1213,14 @@
 	if (themepath[0] != 0)
 	  {
 	     if (sm_client_id)
-		Esnprintf(s, sizeof(s),
+		snprintf(s, sizeof(s),
 			  "exec %s -single -ext_init_win %i -theme %s "
 			  "-econfdir %s -ecachedir %s "
 			  "-smfile %s -smid %s -display %s", command,
 			  init_win_ext, themename, UserEDir(), UserCacheDir(),
 			  sm_file, sm_client_id, dstr);
 	     else
-		Esnprintf(s, sizeof(s),
+		snprintf(s, sizeof(s),
 			  "exec %s -single -ext_init_win %i -theme %s "
 			  "-econfdir %s -ecachedir %s "
 			  "-smfile %s -display %s", command, init_win_ext,
@@ -1230,14 +1230,14 @@
 	else
 	  {
 	     if (sm_client_id)
-		Esnprintf(s, sizeof(s),
+		snprintf(s, sizeof(s),
 			  "exec %s -single -ext_init_win %i "
 			  "-econfdir %s -ecachedir %s "
 			  "-smfile %s -smid %s -display %s", command,
 			  init_win_ext, UserEDir(), UserCacheDir(), sm_file,
 			  sm_client_id, dstr);
 	     else
-		Esnprintf(s, sizeof(s),
+		snprintf(s, sizeof(s),
 			  "exec %s -single -ext_init_win %i"
 			  "-econfdir %s -ecachedir %s "
 			  "-smfile %s -display %s", command, init_win_ext,
@@ -1260,14 +1260,14 @@
 	     disp = NULL;
 	  }
 	if (sm_client_id)
-	   Esnprintf(s, sizeof(s),
+	   snprintf(s, sizeof(s),
 		     "exec %s -single -ext_init_win %i -theme %s "
 		     "-econfdir %s -ecachedir %s "
 		     "-smfile %s -smid %s -display %s", command, init_win_ext,
 		     userthemepath, UserEDir(), UserCacheDir(), sm_file,
 		     sm_client_id, dstr);
 	else
-	   Esnprintf(s, sizeof(s),
+	   snprintf(s, sizeof(s),
 		     "exec %s -ext_init_win %i -theme %s "
 		     "-econfdir %s -ecachedir %s "
 		     "-smfile %s -single -display %s", command, init_win_ext,
diff -ur enlightenment-0.16.6.orig/src/settings.c enlightenment-0.16.6/src/settings.c
--- enlightenment-0.16.6.orig/src/settings.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/settings.c	Wed Nov 12 17:23:52 2003
@@ -84,7 +84,7 @@
 {
    char                s[256];
 
-   Esnprintf(s, sizeof(s), "%s %03i %s", _("Pager scanning speed:"),
+   snprintf(s, sizeof(s), "%s %03i %s", _("Pager scanning speed:"),
 	     tmp_pager_scan_speed, _("lines per second"));
    DialogItemTextSetText(pager_scan_speed_label, s);
    DialogDrawItems(pager_settings_dialog, pager_scan_speed_label, 0, 0, 99999,
@@ -209,7 +209,7 @@
    DialogItemSetFill(di, 0, 0);
    DialogItemSetColSpan(di, 2);
    DialogItemSetAlign(di, 0, 512);
-   Esnprintf(s, sizeof(s), "%s %03i %s", _("Pager scanning speed:"),
+   snprintf(s, sizeof(s), "%s %03i %s", _("Pager scanning speed:"),
 	     tmp_pager_scan_speed, _("lines per second"));
    DialogItemTextSetText(di, s);
 
@@ -1089,9 +1089,9 @@
    for (i = tmp_desktops; i < ENLIGHTENMENT_CONF_NUM_DESKTOPS; i++)
       EUnmapWindow(disp, wins[i]);
    if (tmp_desktops > 1)
-      Esnprintf(s, sizeof(s), _("%i Desktops"), tmp_desktops);
+      snprintf(s, sizeof(s), _("%i Desktops"), tmp_desktops);
    else
-      Esnprintf(s, sizeof(s), _("%i Desktop"), tmp_desktops);
+      snprintf(s, sizeof(s), _("%i Desktop"), tmp_desktops);
    DialogItemTextSetText(tmp_desk_text, s);
    DialogDrawItems(tmp_desk_dialog, tmp_desk_text, 0, 0, 99999, 99999);
 }
@@ -1151,9 +1151,9 @@
    DialogItemSetFill(di, 1, 0);
    DialogItemSetColSpan(di, 2);
    if (tmp_desktops > 1)
-      Esnprintf(s, sizeof(s), _("%i Desktops"), tmp_desktops);
+      snprintf(s, sizeof(s), _("%i Desktops"), tmp_desktops);
    else
-      Esnprintf(s, sizeof(s), _("%i Desktop"), tmp_desktops);
+      snprintf(s, sizeof(s), _("%i Desktop"), tmp_desktops);
    DialogItemTextSetText(di, s);
 
    di = slider = DialogAddItem(table, DITEM_SLIDER);
@@ -1268,10 +1268,10 @@
    EMapWindow(disp, awin);
 
    if ((tmp_area_x > 1) || ((9 - tmp_area_y) > 1))
-      Esnprintf(s, sizeof(s), _("%i x %i\nScreens in size"), tmp_area_x,
+      snprintf(s, sizeof(s), _("%i x %i\nScreens in size"), tmp_area_x,
 		9 - tmp_area_y);
    else
-      Esnprintf(s, sizeof(s), _("1\nScreen in size"));
+      snprintf(s, sizeof(s), _("1\nScreen in size"));
    DialogItemTextSetText(tmp_area_text, s);
    DialogDrawItems(tmp_area_dialog, tmp_area_text, 0, 0, 99999, 99999);
 }
@@ -1337,10 +1337,10 @@
    DialogItemSetPadding(di, 2, 2, 2, 2);
    DialogItemSetFill(di, 1, 0);
    if ((tmp_area_x > 1) || (tmp_area_y > 1))
-      Esnprintf(s, sizeof(s), _("%i x %i\nScreens in size"), tmp_area_x,
+      snprintf(s, sizeof(s), _("%i x %i\nScreens in size"), tmp_area_x,
 		9 - tmp_area_y);
    else
-      Esnprintf(s, sizeof(s), _("1\nScreen in size"));
+      snprintf(s, sizeof(s), _("1\nScreen in size"));
    DialogItemTextSetText(di, s);
 
    table2 = DialogAddItem(table, DITEM_TABLE);
@@ -2562,7 +2562,7 @@
 	   ImlibImage         *im;
 	   Pixmap              p2;
 
-	   Esnprintf(s, sizeof(s), "%s/cached/bgsel/%s", UserCacheDir(),
+	   snprintf(s, sizeof(s), "%s/cached/bgsel/%s", UserCacheDir(),
 		     tmp_bg->name);
 	   p2 = ECreatePixmap(disp, root.win, 64, 48, root.depth);
 	   SetBackgroundTo(pImlibData, p2, tmp_bg, 0);
@@ -2679,7 +2679,7 @@
    ImlibColor          icl;
    Background         *bg;
 
-   Esnprintf(s, sizeof(s), "__NEWBG_%i\n", time(NULL));
+   snprintf(s, sizeof(s), "__NEWBG_%i\n", time(NULL));
    icl.r = tmp_bg_r;
    icl.g = tmp_bg_g;
    icl.b = tmp_bg_b;
@@ -2751,7 +2751,7 @@
 			stmp = fullfileof(tmp_bg->bg.file);
 		     else
 			stmp = duplicate(_("-NONE-"));
-		     Esnprintf(s, sizeof(s),
+		     snprintf(s, sizeof(s),
 			       _
 			       ("Background definition information:\nName: %s\nFile: %s\n"),
 			       tmp_bg->name, stmp);
@@ -2872,7 +2872,7 @@
 			stmp = fullfileof(tmp_bg->bg.file);
 		     else
 			stmp = duplicate(_("-NONE-"));
-		     Esnprintf(s, sizeof(s),
+		     snprintf(s, sizeof(s),
 			       _
 			       ("Background definition information:\nName: %s\nFile: %s\n"),
 			       tmp_bg->name, stmp);
@@ -3012,12 +3012,12 @@
 		    }
 		  else
 		    {
-		       Esnprintf(s, sizeof(s), "%s/cached/bgsel/%s",
+		       snprintf(s, sizeof(s), "%s/cached/bgsel/%s",
 				 UserCacheDir(), bglist[i]->name);
 		       im = ELoadImage(s);
 		       if (!im)
 			 {
-			    Esnprintf(s, sizeof(s), "%s/cached/bgsel/%s",
+			    snprintf(s, sizeof(s), "%s/cached/bgsel/%s",
 				      UserCacheDir(), bglist[i]->name);
 			    p2 =
 			       ECreatePixmap(disp, pmap, 64, 48,
@@ -3130,7 +3130,7 @@
 		   stmp = fullfileof(tmp_bg->bg.file);
 		else
 		   stmp = duplicate(_("-NONE-"));
-		Esnprintf(s, sizeof(s),
+		snprintf(s, sizeof(s),
 			  _
 			  ("Background definition information:\nName: %s\nFile: %s\n"),
 			  tmp_bg->name, stmp);
@@ -3193,7 +3193,7 @@
    char                s[256];
 
    di = (DItem *) data;
-   Esnprintf(s, sizeof(s), _("Unused backgrounds freed after %2i:%02i:%02i"),
+   snprintf(s, sizeof(s), _("Unused backgrounds freed after %2i:%02i:%02i"),
 	     tmp_bg_timeout / 3600,
 	     (tmp_bg_timeout / 60) - (60 * (tmp_bg_timeout / 3600)),
 	     (tmp_bg_timeout) - (60 * (tmp_bg_timeout / 60)));
@@ -3253,7 +3253,7 @@
 			stmp = fullfileof(tmp_bg->bg.file);
 		     else
 			stmp = duplicate(_("-NONE-"));
-		     Esnprintf(s, sizeof(s),
+		     snprintf(s, sizeof(s),
 			       _
 			       ("Background definition information:\nName: %s\nFile: %s\n"),
 			       tmp_bg->name, stmp);
@@ -3497,7 +3497,7 @@
      {
 	char                s[1024];
 
-	Esnprintf(s, sizeof(s), "__NEWBG_%i\n", time(NULL));
+	snprintf(s, sizeof(s), "__NEWBG_%i\n", time(NULL));
 	bg = CreateDesktopBG(s, NULL, NULL, 1, 1, 0, 0, 0, 0, NULL, 1, 512, 512,
 			     0, 0);
 	AddItem(bg, bg->name, 0, LIST_TYPE_BACKGROUND);
@@ -3765,7 +3765,7 @@
    DialogItemSetPadding(di, 2, 2, 2, 2);
    DialogItemSetFill(di, 1, 0);
    DialogItemSetAlign(di, 512, 512);
-   Esnprintf(s, sizeof(s), _("Unused backgrounds freed after %2i:%02i:%02i"),
+   snprintf(s, sizeof(s), _("Unused backgrounds freed after %2i:%02i:%02i"),
 	     tmp_bg_timeout / 3600,
 	     (tmp_bg_timeout / 60) - (60 * (tmp_bg_timeout / 3600)),
 	     (tmp_bg_timeout) - (60 * (tmp_bg_timeout / 60)));
@@ -3875,7 +3875,7 @@
 	 stmp = fullfileof(tmp_bg->bg.file);
       else
 	 stmp = duplicate(_("-NONE-"));
-      Esnprintf(s, sizeof(s),
+      snprintf(s, sizeof(s),
 		_("Background definition information:\nName: %s\nFile: %s\n"),
 		tmp_bg->name, stmp);
       Efree(stmp);
diff -ur enlightenment-0.16.6.orig/src/setup.c enlightenment-0.16.6/src/setup.c
--- enlightenment-0.16.6.orig/src/setup.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/setup.c	Wed Nov 12 17:23:52 2003
@@ -185,7 +185,7 @@
 			    if (NULL != dispstr)
 			       *dispstr = '\0';
 			 }
-		       Esnprintf(subdisplay + strlen(subdisplay), 10, ".%d", i);
+		       snprintf(subdisplay + strlen(subdisplay), 10, ".%d", i);
 		       dstr = duplicate(subdisplay);
 		       disp = XOpenDisplay(dstr);
 		       root.scr = i;
@@ -568,7 +568,7 @@
    char                s[1024], ss[1024], *home;
 
    EDBUG(6, "SetupDirs");
-   Esnprintf(s, sizeof(s), "%s", UserEDir());
+   snprintf(s, sizeof(s), "%s", UserEDir());
    home = homedir(getuid());
    if (home)
      {
@@ -579,7 +579,7 @@
      {
 	if (!isdir(s))
 	  {
-	     Esnprintf(ss, sizeof(ss), "%s.old", UserEDir());
+	     snprintf(ss, sizeof(ss), "%s.old", UserEDir());
 	     mv(s, ss);
 	     md(s);
 	  }
@@ -588,37 +588,37 @@
      }
    else
       md(s);
-   Esnprintf(s, sizeof(s), "%s/themes", UserEDir());
+   snprintf(s, sizeof(s), "%s/themes", UserEDir());
    if (!exists(s))
       md(s);
    else
       ChkDir(s);
-   Esnprintf(s, sizeof(s), "%s/backgrounds", UserEDir());
+   snprintf(s, sizeof(s), "%s/backgrounds", UserEDir());
    if (!exists(s))
       md(s);
    else
       ChkDir(s);
-   Esnprintf(s, sizeof(s), "%s/cached", UserCacheDir());
+   snprintf(s, sizeof(s), "%s/cached", UserCacheDir());
    if (!exists(s))
       md(s);
    else
       ChkDir(s);
-   Esnprintf(s, sizeof(s), "%s/cached/img", UserCacheDir());
+   snprintf(s, sizeof(s), "%s/cached/img", UserCacheDir());
    if (!exists(s))
       md(s);
    else
       ChkDir(s);
-   Esnprintf(s, sizeof(s), "%s/cached/cfg", UserCacheDir());
+   snprintf(s, sizeof(s), "%s/cached/cfg", UserCacheDir());
    if (!exists(s))
       md(s);
    else
       ChkDir(s);
-   Esnprintf(s, sizeof(s), "%s/cached/bgsel", UserCacheDir());
+   snprintf(s, sizeof(s), "%s/cached/bgsel", UserCacheDir());
    if (!exists(s))
       md(s);
    else
       ChkDir(s);
-   Esnprintf(s, sizeof(s), "%s/cached/pager", UserCacheDir());
+   snprintf(s, sizeof(s), "%s/cached/pager", UserCacheDir());
    if (!exists(s))
       md(s);
    else
@@ -640,7 +640,7 @@
    Esetenv("EROOT", __XOS2RedirRoot(ENLIGHTENMENT_ROOT), 1);
 #endif
    Esetenv("EBIN", ENLIGHTENMENT_BIN, 1);
-   Esnprintf(s, sizeof(s), "%i", getpid());
+   snprintf(s, sizeof(s), "%i", getpid());
    Esetenv("EPID", s, 1);
    Esetenv("ETHEME", themepath, 1);
    Esetenv("ECONFDIR", UserEDir(), 1);
@@ -785,7 +785,7 @@
 	     if (i > 12)
 		i = 1;
 
-	     Esnprintf(s, sizeof(s), "pix/wait%i.png", i);
+	     snprintf(s, sizeof(s), "pix/wait%i.png", i);
 
 	     f = FindFile(s);
 	     im = NULL;
@@ -839,7 +839,7 @@
 
    EDBUG(3, "SetupUserInitialization");
 
-   Esnprintf(file, sizeof(file), "%s/.initialized", UserEDir());
+   snprintf(file, sizeof(file), "%s/.initialized", UserEDir());
    if (isfile(file))
      {
 	mode.firsttime = 0;
@@ -855,7 +855,7 @@
 	fclose(f);
 	if (fork())
 	   EDBUG_RETURN_;
-	Esnprintf(file, sizeof(file), "exec %s/scripts/e_gen_menu",
+	snprintf(file, sizeof(file), "exec %s/scripts/e_gen_menu",
 		  ENLIGHTENMENT_ROOT);
 	execl(usershell(getuid()), usershell(getuid()), "-c", (char *)file,
 	      NULL);
diff -ur enlightenment-0.16.6.orig/src/snaps.c enlightenment-0.16.6/src/snaps.c
--- enlightenment-0.16.6.orig/src/snaps.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/snaps.c	Wed Nov 12 17:23:52 2003
@@ -36,10 +36,10 @@
    if (ewin->snap)
       return ewin->snap;
    if ((ewin->client.name) && (ewin->client.class))
-      Esnprintf(buf, sizeof(buf), "%s.%s", ewin->client.name,
+      snprintf(buf, sizeof(buf), "%s.%s", ewin->client.name,
 		ewin->client.class);
    else if (ewin->client.title)
-      Esnprintf(buf, sizeof(buf), "TITLE.%s", ewin->client.title);
+      snprintf(buf, sizeof(buf), "TITLE.%s", ewin->client.title);
    else
       return NULL;
    sn = FindItem(buf, 0, LIST_FINDBY_BOTH, LIST_TYPE_SNAPSHOT);
@@ -64,10 +64,10 @@
 	char                buf[4096];
 
 	if ((ewin->client.name) && (ewin->client.class))
-	   Esnprintf(buf, sizeof(buf), "%s.%s", ewin->client.name,
+	   snprintf(buf, sizeof(buf), "%s.%s", ewin->client.name,
 		     ewin->client.class);
 	else if (ewin->client.title)
-	   Esnprintf(buf, sizeof(buf), "TITLE.%s", ewin->client.title);
+	   snprintf(buf, sizeof(buf), "TITLE.%s", ewin->client.title);
 	sn = NewSnapshot(buf);
 	ListChangeItemID(LIST_TYPE_SNAPSHOT, sn, 1);
 	if ((ewin->client.name) && (ewin->client.class))
@@ -816,10 +816,10 @@
    char                buf[4096];
 
    if ((ewin->client.name) && (ewin->client.class))
-      Esnprintf(buf, sizeof(buf), "%s.%s", ewin->client.name,
+      snprintf(buf, sizeof(buf), "%s.%s", ewin->client.name,
 		ewin->client.class);
    else if (ewin->client.title)
-      Esnprintf(buf, sizeof(buf), "TITLE.%s", ewin->client.title);
+      snprintf(buf, sizeof(buf), "TITLE.%s", ewin->client.title);
    else
       return;
    if (ewin->snap)
@@ -924,7 +924,7 @@
 
    fclose(f);
 
-   Esnprintf(buf, sizeof(buf), "%s.snapshots.%i", GetGenericSMFile(), root.scr);
+   snprintf(buf, sizeof(buf), "%s.snapshots.%i", GetGenericSMFile(), root.scr);
    mv(s, buf);
    if (!isfile(buf))
       Alert(_("Error saving snaps file\n"));
@@ -961,9 +961,9 @@
    FILE               *f;
    int                 res_w, res_h;
 
-   Esnprintf(buf, sizeof(buf), "%s.snapshots.%i", GetSMFile(), root.scr);
+   snprintf(buf, sizeof(buf), "%s.snapshots.%i", GetSMFile(), root.scr);
    if (!exists(buf))
-      Esnprintf(buf, sizeof(buf), "%s.snapshots.%i", GetGenericSMFile(),
+      snprintf(buf, sizeof(buf), "%s.snapshots.%i", GetGenericSMFile(),
 		root.scr);
 #ifndef __EMX__
    f = fopen(buf, "r");
@@ -1239,7 +1239,7 @@
       return;
    if ((hint.res_name) && (hint.res_class))
      {
-	Esnprintf(buf, sizeof(buf), "%s.%s", hint.res_name, hint.res_class);
+	snprintf(buf, sizeof(buf), "%s.%s", hint.res_name, hint.res_class);
 	sn = FindItem(buf, 0, LIST_FINDBY_BOTH, LIST_TYPE_SNAPSHOT);
      }
    if (hint.res_name)
@@ -1265,7 +1265,7 @@
       return;
    if ((hint.res_name) && (hint.res_class))
      {
-	Esnprintf(buf, sizeof(buf), "%s.%s", hint.res_name, hint.res_class);
+	snprintf(buf, sizeof(buf), "%s.%s", hint.res_name, hint.res_class);
 	sn = FindItem(buf, 0, LIST_FINDBY_BOTH, LIST_TYPE_SNAPSHOT);
      }
    if (hint.res_name)
diff -ur enlightenment-0.16.6.orig/src/startup.c enlightenment-0.16.6/src/startup.c
--- enlightenment-0.16.6.orig/src/startup.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/startup.c	Wed Nov 12 17:23:52 2003
@@ -47,7 +47,7 @@
    if (!exists(file))
       EDBUG_RETURN(0);
 
-   Esnprintf(tmp, 2048, "%s/estrt_%i",
+   snprintf(tmp, 2048, "%s/estrt_%i",
 	     (getenv("TMPDIR") == NULL) ? "/tmp" : getenv("TMPDIR"),
 	     time(NULL));
    f1 = fopen(file, "r");
@@ -142,19 +142,19 @@
    EDBUG(6, "AddE");
    val = 0;
    h = homedir(getuid());
-   Esnprintf(s, 1024, "%s/.xsession", h);
+   snprintf(s, 1024, "%s/.xsession", h);
    val |= AddEToFile(s);
-   Esnprintf(s, 1024, "%s/.xinitrc", h);
+   snprintf(s, 1024, "%s/.xinitrc", h);
    val |= AddEToFile(s);
-   Esnprintf(s, 1024, "%s/.Xclients", h);
+   snprintf(s, 1024, "%s/.Xclients", h);
    val |= AddEToFile(s);
    if (!val)
      {
-	Esnprintf(s, 1024, "%s/.xsession", h);
+	snprintf(s, 1024, "%s/.xsession", h);
 	CreateEFile(s);
-	Esnprintf(s, 1024, "%s/.xinitrc", h);
+	snprintf(s, 1024, "%s/.xinitrc", h);
 	CreateEFile(s);
-	Esnprintf(s, 1024, "%s/.Xclients", h);
+	snprintf(s, 1024, "%s/.Xclients", h);
 	CreateEFile(s);
      }
    if (h)
diff -ur enlightenment-0.16.6.orig/src/tclass.c enlightenment-0.16.6/src/tclass.c
--- enlightenment-0.16.6.orig/src/tclass.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/tclass.c	Wed Nov 12 17:23:52 2003
@@ -85,7 +85,7 @@
      {
 	char                stuff[255];
 
-	Esnprintf(stuff, sizeof(stuff), _("%u references remain\n"),
+	snprintf(stuff, sizeof(stuff), _("%u references remain\n"),
 		  t->ref_count);
 	DIALOG_OK(_("TextClass Error!"), stuff);
 	EDBUG_RETURN_;
diff -ur enlightenment-0.16.6.orig/src/text.c enlightenment-0.16.6/src/text.c
--- enlightenment-0.16.6.orig/src/text.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/text.c	Wed Nov 12 17:23:52 2003
@@ -166,7 +166,7 @@
 	  {
 	     *ss = ' ';
 	     word(dup, 1, w);
-	     Esnprintf(s, sizeof(s), "ttfonts/%s.ttf", w);
+	     snprintf(s, sizeof(s), "ttfonts/%s.ttf", w);
 	     word(dup, 2, w);
 	     ss = FindFile(s);
 	     if (ss)
diff -ur enlightenment-0.16.6.orig/src/theme.c enlightenment-0.16.6/src/theme.c
--- enlightenment-0.16.6.orig/src/theme.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/theme.c	Wed Nov 12 17:23:52 2003
@@ -56,7 +56,7 @@
 	       {
 		  if (!strcmp(str[i], "DEFAULT"))
 		    {
-		       Esnprintf(ss, sizeof(ss), "%s/%s", dir, str[i]);
+		       snprintf(ss, sizeof(ss), "%s/%s", dir, str[i]);
 #ifndef __EMX__
 		       if (readlink(ss, s, sizeof(s)) > 0)
 			 {
@@ -64,7 +64,7 @@
 			       def = duplicate(s);
 			    else
 			      {
-				 Esnprintf(s, sizeof(s), "%s/%s", dir, s);
+				 snprintf(s, sizeof(s), "%s/%s", dir, s);
 				 def = duplicate(s);
 			      }
 			 }
@@ -84,7 +84,7 @@
 		    {
 		       ok = 0;
 
-		       Esnprintf(s, sizeof(s), "%s/%s", dir, str[i]);
+		       snprintf(s, sizeof(s), "%s/%s", dir, str[i]);
 		       if ((isdir(s)) && (SanitiseThemeDir(s)))
 			  ok = 1;
 		       else if ((isfile(s)) && (FileExtension(s))
@@ -113,12 +113,12 @@
       NULL;
    int                 count = 0;
 
-   Esnprintf(s, sizeof(s), "%s/themes", UserEDir());
+   snprintf(s, sizeof(s), "%s/themes", UserEDir());
    def = append_merge_dir(s, &list, &count);
 #ifndef __EMX__
-   Esnprintf(s, sizeof(s), "%s/themes", ENLIGHTENMENT_ROOT);
+   snprintf(s, sizeof(s), "%s/themes", ENLIGHTENMENT_ROOT);
 #else
-   Esnprintf(s, sizeof(s), "%s/themes", __XOS2RedirRoot(ENLIGHTENMENT_ROOT));
+   snprintf(s, sizeof(s), "%s/themes", __XOS2RedirRoot(ENLIGHTENMENT_ROOT));
 #endif
    def2 = append_merge_dir(s, &list, &count);
 
@@ -146,7 +146,7 @@
    char               *def = NULL;
    int                 count;
 
-   Esnprintf(ss, sizeof(ss), "%s/themes/DEFAULT", UserEDir());
+   snprintf(ss, sizeof(ss), "%s/themes/DEFAULT", UserEDir());
 #ifndef __EMX__
    count = readlink(ss, s, sizeof(s));
    if ((exists(ss)) && (count > 0))
@@ -156,7 +156,7 @@
 	   def = duplicate(s);
 	else
 	  {
-	     Esnprintf(ss, sizeof(ss), "%s/themes/%s", UserEDir(), s);
+	     snprintf(ss, sizeof(ss), "%s/themes/%s", UserEDir(), s);
 	     def = duplicate(ss);
 	  }
      }
@@ -167,9 +167,9 @@
    if (!def)
      {
 #ifndef __EMX__
-	Esnprintf(ss, sizeof(ss), "%s/themes/DEFAULT", ENLIGHTENMENT_ROOT);
+	snprintf(ss, sizeof(ss), "%s/themes/DEFAULT", ENLIGHTENMENT_ROOT);
 #else
-	Esnprintf(ss, sizeof(ss), "%s/themes/DEFAULT",
+	snprintf(ss, sizeof(ss), "%s/themes/DEFAULT",
 		  __XOS2RedirRoot(ENLIGHTENMENT_ROOT));
 #endif
 #ifndef __EMX__
@@ -181,7 +181,7 @@
 		def = duplicate(s);
 	     else
 	       {
-		  Esnprintf(ss, sizeof(ss), "%s/themes/%s", ENLIGHTENMENT_ROOT,
+		  snprintf(ss, sizeof(ss), "%s/themes/%s", ENLIGHTENMENT_ROOT,
 			    s);
 		  def = duplicate(ss);
 	       }
@@ -203,7 +203,7 @@
  */
    char                ss[FILEPATH_LEN_MAX];
 
-   Esnprintf(ss, sizeof(ss), "%s/themes/DEFAULT", UserEDir());
+   snprintf(ss, sizeof(ss), "%s/themes/DEFAULT", UserEDir());
    if (exists(ss))
       rm(ss);
    if (theme)
@@ -246,14 +246,14 @@
 	     /* make the temp dir */
 
 	     themename = fileof(theme);
-	     Esnprintf(th, sizeof(th), "%s/themes/%s", UserEDir(), themename);
+	     snprintf(th, sizeof(th), "%s/themes/%s", UserEDir(), themename);
 	     Efree(themename);
 	     md(th);
 	     /* check magic numbers */
 	     if ((buf[0] == 31) && (buf[1] == 139))
 	       {
 		  /*gzipped tarball */
-		  Esnprintf(s, sizeof(s),
+		  snprintf(s, sizeof(s),
 			    "gzip -d -c < %s | (cd %s ; tar -xf -)", theme, th);
 	       }
 	     else if ((buf[257] == 'u') && (buf[258] == 's')
@@ -261,7 +261,7 @@
 		      && (buf[261] == 'r'))
 	       {
 		  /*vanilla tarball */
-		  Esnprintf(s, sizeof(s), "(cd %s ; tar -xf %s)", th, theme);
+		  snprintf(s, sizeof(s), "(cd %s ; tar -xf %s)", th, theme);
 	       }
 	     /* exec the untar if tarred */
 	     system(s);
@@ -275,9 +275,9 @@
 		  char                sss[FILEPATH_LEN_MAX];
 
 #ifndef __EMX__
-		  Esnprintf(sss, sizeof(sss), "/bin/rm -rf %s", themepath);
+		  snprintf(sss, sizeof(sss), "/bin/rm -rf %s", themepath);
 #else
-		  Esnprintf(sss, sizeof(sss), "rm.exe -rf %s", themepath);
+		  snprintf(sss, sizeof(sss), "rm.exe -rf %s", themepath);
 #endif
 		  system(sss);
 		  mustdel = 0;
@@ -299,9 +299,9 @@
    if (!theme[0])
      {
 #ifndef __EMX__
-	Esnprintf(s, sizeof(s), "%s/themes/DEFAULT", ENLIGHTENMENT_ROOT);
+	snprintf(s, sizeof(s), "%s/themes/DEFAULT", ENLIGHTENMENT_ROOT);
 #else
-	Esnprintf(s, sizeof(s), "%s/themes/DEFAULT",
+	snprintf(s, sizeof(s), "%s/themes/DEFAULT",
 		  __XOS2RedirRoot(ENLIGHTENMENT_ROOT));
 #endif
 	EDBUG_RETURN(duplicate(s));
@@ -314,7 +314,7 @@
       ret = ExtractTheme(theme);
    if (!ret)
      {
-	Esnprintf(s, sizeof(s), "%s/themes/%s", UserEDir(), theme);
+	snprintf(s, sizeof(s), "%s/themes/%s", UserEDir(), theme);
 	if (exists(s))
 	   ret = ExtractTheme(s);
 	else
@@ -322,9 +322,9 @@
 	if (!ret)
 	  {
 #ifndef __EMX__
-	     Esnprintf(s, sizeof(s), "%s/themes/%s", ENLIGHTENMENT_ROOT, theme);
+	     snprintf(s, sizeof(s), "%s/themes/%s", ENLIGHTENMENT_ROOT, theme);
 #else
-	     Esnprintf(s, sizeof(s), "%s/themes/%s",
+	     snprintf(s, sizeof(s), "%s/themes/%s",
 		       __XOS2RedirRoot(ENLIGHTENMENT_ROOT), theme);
 #endif
 	     if (exists(s))
@@ -349,7 +349,7 @@
    if (!badtheme)
       return;
 
-   Esnprintf(s, sizeof(s),
+   snprintf(s, sizeof(s),
 	     _("The theme:\n" "%s\n"
 	       "Is a badly formed theme package and is thus not being used.\n"
 	       "Enlightenment has fallen back to using the DEFAULT theme.\n"
diff -ur enlightenment-0.16.6.orig/src/tooltips.c enlightenment-0.16.6/src/tooltips.c
--- enlightenment-0.16.6.orig/src/tooltips.c	Wed Nov  5 18:58:51 2003
+++ enlightenment-0.16.6/src/tooltips.c	Wed Nov 12 17:23:52 2003
@@ -967,7 +967,7 @@
      {
 	char                stuff[255];
 
-	Esnprintf(stuff, sizeof(stuff), _("%u references remain\n"),
+	snprintf(stuff, sizeof(stuff), _("%u references remain\n"),
 		  tt->ref_count);
 	DIALOG_OK(_("ToolTip Error!"), stuff);
      }
